{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFPOVTUGDEV"
		},
		"AzureSynapseAnalytics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"adls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adls'"
		},
		"adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stpovtug.dfs.core.windows.net/"
		},
		"integrationRuntime-ADFPOVTUGDEV_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/179dc394-2676-4356-b9ef-c93874f2f4a7/resourcegroups/POV_TUG/providers/Microsoft.DataFactory/factories/ADF-POV-TUG/integrationruntimes/integrationRuntime-POV-TUG"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/00_INITIAL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Bulk Initial Load",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.FOLDER_NM",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PARQUET_SOURCE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": {
										"value": "@pipeline().parameters.TGT_TBL_NM",
										"type": "Expression"
									},
									"SynapseSchema": {
										"value": "@pipeline().parameters.TGT_DB_NM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FOLDER_NM": {
						"type": "string",
						"defaultValue": "BSEG_1"
					},
					"TGT_DB_NM": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"TGT_TBL_NM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PARQUET_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/DIRECT_SYNAPSE_DATASET_DYNAMIC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/00_STREAM_COMMON_POC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET PROCESS LIST",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_PCS_STREAM]",
								"storedProcedureParameters": {
									"P_STREAM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "SET AS_AT_DT",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_AS_AT_DT",
							"value": {
								"value": "@activity('START STREAM').output.FIRSTROW.AS_AT_DT",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SET STREAM_SEQ_ID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_STREAM_SEQ_ID",
							"value": {
								"value": "@activity('START STREAM').output.FIRSTROW.STREAM_SEQ_ID",
								"type": "Expression"
							}
						}
					},
					{
						"name": "START STREAM",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CNTL_ACTV_STREAM]",
								"storedProcedureParameters": {
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREAM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SET PROCESS LIST",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET PROCESS LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SET AS_AT_DT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SET STREAM_SEQ_ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_PCS_NM_LIST",
							"value": {
								"value": "@activity('GET PROCESS LIST').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FOR EACH PROCESS",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SET PROCESS LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('V_PCS_NM_LIST')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "RUN_PCS_05_COMMON",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "05_COMMON_POC",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_PROCESS_NM": {
												"value": "@item().PCS_NM",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_STREAM_SEQ_ID": {
												"value": "@variables('V_STREAM_SEQ_ID')",
												"type": "Expression"
											},
											"P_AS_AT_DT": {
												"value": "@variables('V_AS_AT_DT')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "FINAL STREAM",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FOR EACH PROCESS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_FINAL_STREAM]",
								"storedProcedureParameters": {
									"P_AS_AT_DT": {
										"type": "String",
										"value": {
											"value": "@variables('V_AS_AT_DT')",
											"type": "Expression"
										}
									},
									"P_STREAM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_NM",
											"type": "Expression"
										}
									},
									"P_STREAM_SEQ_ID": {
										"type": "String",
										"value": {
											"value": "@variables('V_STREAM_SEQ_ID')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FINAL STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_STREAM]",
							"storedProcedureParameters": {
								"P_STREAM_NM": {
									"value": {
										"value": "@pipeline().parameters.P_STREAM_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_STREAM_RESULT": {
									"value": {
										"value": "@activity('FINAL STREAM').output.firstrow.STREAM_RESULT",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_STREAM_SEQ_ID": {
									"value": {
										"value": "@variables('V_STREAM_SEQ_ID')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_STREAM_NM": {
						"type": "string",
						"defaultValue": "STREAM_1_LOAD"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					}
				},
				"variables": {
					"V_STREAM_RESULT": {
						"type": "String",
						"defaultValue": "-999"
					},
					"V_PCS_NM_LIST": {
						"type": "Array",
						"defaultValue": [
							999
						]
					},
					"V_AS_AT_DT": {
						"type": "String",
						"defaultValue": "19000101"
					},
					"V_STREAM_SEQ_ID": {
						"type": "String",
						"defaultValue": "-999"
					},
					"STREAM_FLAG": {
						"type": "String"
					},
					"PRCS_NM": {
						"type": "String"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/controltable')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]",
				"[concat(variables('factoryId'), '/pipelines/05_COMMON_POC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_LOAD_INITIAL_LOAD_TO_TEMP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "INSERT INTO dbo.BSEG_CDC_TEMP (AEDATTM,MANDT,BUKRS,BELNR,GJAHR,BUZEI,BUZID,AUGDT,AUGCP,AUGBL,BSCHL,KOART,UMSKZ,UMSKS,ZUMSK,SHKZG,GSBER,PARGB,MWSKZ,QSSKZ,DMBTR,WRBTR,KZBTR,PSWBT,PSWSL,TXBHW,TXBFW,MWSTS,WMWST,HWBAS,FWBAS,HWZUZ,FWZUZ,SHZUZ,STEKZ,MWART,TXGRP,KTOSL,QSSHB,KURSR,GBETR,BDIFF,BDIF2,VALUT,ZUONR,SGTXT,ZINKZ,VBUND,BEWAR,ALTKT,VORGN,FDLEV,FDGRP,FDWBT,FDTAG,FKONT,KOKRS,KOSTL,PROJN,AUFNR,VBELN,VBEL2,POSN2,ETEN2,ANLN1,ANLN2,ANBWA,BZDAT,PERNR,XUMSW,XHRES,XKRES,XOPVW,XCPDD,XSKST,XSAUF,XSPRO,XSERG,XFAKT,XUMAN,XANET,XSKRL,XINVE,XPANZ,XAUTO,XNCOP,XZAHL,SAKNR,HKONT,KUNNR,LIFNR,FILKD,XBILK,GVTYP,HZUON,ZFBDT,ZTERM,ZBD1T,ZBD2T,ZBD3T,ZBD1P,ZBD2P,SKFBT,SKNTO,WSKTO,ZLSCH,ZLSPR,ZBFIX,HBKID,BVTYP,NEBTR,MWSK1,DMBT1,WRBT1,MWSK2,DMBT2,WRBT2,MWSK3,DMBT3,WRBT3,REBZG,REBZJ,REBZZ,REBZT,ZOLLT,ZOLLD,LZBKZ,LANDL,DIEKZ,SAMNR,ABPER,VRSKZ,VRSDT,DISBN,DISBJ,DISBZ,WVERW,ANFBN,ANFBJ,ANFBU,ANFAE,BLNBT,BLNKZ,BLNPZ,MSCHL,MANSP,MADAT,MANST,MABER,ESRNR,ESRRE,ESRPZ,KLIBT,QSZNR,QBSHB,QSFBT,NAVHW,NAVFW,MATNR,WERKS,MENGE,MEINS,ERFMG,ERFME,BPMNG,BPRME,EBELN,EBELP,ZEKKN,ELIKZ,VPRSV,PEINH,BWKEY,BWTAR,BUSTW,REWRT,REWWR,BONFB,BUALT,PSALT,NPREI,TBTKZ,SPGRP,SPGRM,SPGRT,SPGRG,SPGRV,SPGRQ,STCEG,EGBLD,EGLLD,RSTGR,RYACQ,RPACQ,RDIFF,RDIF2,PRCTR,XHKOM,VNAME,RECID,EGRUP,VPTNR,VERTT,VERTN,VBEWA,DEPOT,TXJCD,IMKEY,DABRZ,POPTS,FIPOS,KSTRG,NPLNR,AUFPL,APLZL,PROJK,PAOBJNR,PASUBNR,SPGRS,SPGRC,BTYPE,ETYPE,XEGDR,LNRAN,HRKFT,DMBE2,DMBE3,DMB21,DMB22,DMB23,DMB31,DMB32,DMB33,MWST2,MWST3,NAVH2,NAVH3,SKNT2,SKNT3,BDIF3,RDIF3,HWMET,GLUPM,XRAGL,UZAWE,LOKKT,FISTL,GEBER,STBUK,TXBH2,TXBH3,PPRCT,XREF1,XREF2,KBLNR,KBLPOS,STTAX,FKBER,OBZEI,XNEGP,RFZEI,CCBTC,KKBER,EMPFB,XREF3,DTWS1,DTWS2,DTWS3,DTWS4,GRICD,GRIRG,GITYP,XPYPR,KIDNO,ABSBT,IDXSP,LINFV,KONTT,KONTL,UEBGDAT,TXDAT,AGZEI,PYCUR,PYAMT,BUPLA,SECCO,LSTAR,CESSION_KZ,PRZNR,PPDIFF,PPDIF2,PPDIF3,PENLC1,PENLC2,PENLC3,PENFC,PENDAYS,PENRC,GRANT_NBR,SCTAX,FKBER_LONG,GMVKZ,SRTYPE,INTRENO,MEASURE,AUGGJ,PPA_EX_IND,DOCLN,SEGMENT,PSEGMENT,PFKBER,HKTID,KSTAR,XLGCLR,TAXPS,PAYS_PROV,PAYS_TRAN,MNDID,XFRGE_BSEG,AWTYP,AWKEY,AWSYS,POSNR,BUZEI_SENDER,H_MONAT,H_BSTAT,H_BUDAT,H_BLDAT,H_WAERS,H_BLART,H_HWAER,H_HWAE2,H_HWAE3,NETDT,SK1DT,SK2DT,_DATAAGING,FQFTYPE,LQITEM,GKONT,GKART,GHKON,SQUAN,ANLN2_PN,BWASL_PN,BZDAT_PN,XVABG_PN,ANBTR_PN,PROZS_PN,ZZHRKFT,ZZHRKTX,DUMMY_INCL_EEW_COBL,RE_BUKRS,RE_ACCOUNT,PGEBER,PGRANT_NBR,BUDGET_PD,PBUDGET_PD,J_1TPBUPL,PEROP_BEG,PEROP_END,FASTPAY,IGNR_IVREF,FMFGUS_KEY,FMXDOCNR,FMXYEAR,FMXDOCLN,FMXZEKKN,PRODPER,GST_PART,PLC_SUP,HSN_SAC,RECRF,INWARD_NO,INWARD_DT,GROUND_NO,GROUND_DT,GROUND_TYP,PYMTKEY)\nSELECT GETDATE(),MANDT,BUKRS,BELNR,GJAHR,BUZEI,BUZID,AUGDT,AUGCP,AUGBL,BSCHL,KOART,UMSKZ,UMSKS,ZUMSK,SHKZG,GSBER,PARGB,MWSKZ,QSSKZ,DMBTR,WRBTR,KZBTR,PSWBT,PSWSL,TXBHW,TXBFW,MWSTS,WMWST,HWBAS,FWBAS,HWZUZ,FWZUZ,SHZUZ,STEKZ,MWART,TXGRP,KTOSL,QSSHB,KURSR,GBETR,BDIFF,BDIF2,VALUT,ZUONR,SGTXT,ZINKZ,VBUND,BEWAR,ALTKT,VORGN,FDLEV,FDGRP,FDWBT,FDTAG,FKONT,KOKRS,KOSTL,PROJN,AUFNR,VBELN,VBEL2,POSN2,ETEN2,ANLN1,ANLN2,ANBWA,BZDAT,PERNR,XUMSW,XHRES,XKRES,XOPVW,XCPDD,XSKST,XSAUF,XSPRO,XSERG,XFAKT,XUMAN,XANET,XSKRL,XINVE,XPANZ,XAUTO,XNCOP,XZAHL,SAKNR,HKONT,KUNNR,LIFNR,FILKD,XBILK,GVTYP,HZUON,ZFBDT,ZTERM,ZBD1T,ZBD2T,ZBD3T,ZBD1P,ZBD2P,SKFBT,SKNTO,WSKTO,ZLSCH,ZLSPR,ZBFIX,HBKID,BVTYP,NEBTR,MWSK1,DMBT1,WRBT1,MWSK2,DMBT2,WRBT2,MWSK3,DMBT3,WRBT3,REBZG,REBZJ,REBZZ,REBZT,ZOLLT,ZOLLD,LZBKZ,LANDL,DIEKZ,SAMNR,ABPER,VRSKZ,VRSDT,DISBN,DISBJ,DISBZ,WVERW,ANFBN,ANFBJ,ANFBU,ANFAE,BLNBT,BLNKZ,BLNPZ,MSCHL,MANSP,MADAT,MANST,MABER,ESRNR,ESRRE,ESRPZ,KLIBT,QSZNR,QBSHB,QSFBT,NAVHW,NAVFW,MATNR,WERKS,MENGE,MEINS,ERFMG,ERFME,BPMNG,BPRME,EBELN,EBELP,ZEKKN,ELIKZ,VPRSV,PEINH,BWKEY,BWTAR,BUSTW,REWRT,REWWR,BONFB,BUALT,PSALT,NPREI,TBTKZ,SPGRP,SPGRM,SPGRT,SPGRG,SPGRV,SPGRQ,STCEG,EGBLD,EGLLD,RSTGR,RYACQ,RPACQ,RDIFF,RDIF2,PRCTR,XHKOM,VNAME,RECID,EGRUP,VPTNR,VERTT,VERTN,VBEWA,DEPOT,TXJCD,IMKEY,DABRZ,POPTS,FIPOS,KSTRG,NPLNR,AUFPL,APLZL,PROJK,PAOBJNR,PASUBNR,SPGRS,SPGRC,BTYPE,ETYPE,XEGDR,LNRAN,HRKFT,DMBE2,DMBE3,DMB21,DMB22,DMB23,DMB31,DMB32,DMB33,MWST2,MWST3,NAVH2,NAVH3,SKNT2,SKNT3,BDIF3,RDIF3,HWMET,GLUPM,XRAGL,UZAWE,LOKKT,FISTL,GEBER,STBUK,TXBH2,TXBH3,PPRCT,XREF1,XREF2,KBLNR,KBLPOS,STTAX,FKBER,OBZEI,XNEGP,RFZEI,CCBTC,KKBER,EMPFB,XREF3,DTWS1,DTWS2,DTWS3,DTWS4,GRICD,GRIRG,GITYP,XPYPR,KIDNO,ABSBT,IDXSP,LINFV,KONTT,KONTL,UEBGDAT,TXDAT,AGZEI,PYCUR,PYAMT,BUPLA,SECCO,LSTAR,CESSION_KZ,PRZNR,PPDIFF,PPDIF2,PPDIF3,PENLC1,PENLC2,PENLC3,PENFC,PENDAYS,PENRC,GRANT_NBR,SCTAX,FKBER_LONG,GMVKZ,SRTYPE,INTRENO,MEASURE,AUGGJ,PPA_EX_IND,DOCLN,SEGMENT,PSEGMENT,PFKBER,HKTID,KSTAR,XLGCLR,TAXPS,PAYS_PROV,PAYS_TRAN,MNDID,XFRGE_BSEG,AWTYP,AWKEY,AWSYS,POSNR,BUZEI_SENDER,H_MONAT,H_BSTAT,H_BUDAT,H_BLDAT,H_WAERS,H_BLART,H_HWAER,H_HWAE2,H_HWAE3,NETDT,SK1DT,SK2DT,_DATAAGING,FQFTYPE,LQITEM,GKONT,GKART,GHKON,SQUAN,ANLN2_PN,BWASL_PN,BZDAT_PN,XVABG_PN,ANBTR_PN,PROZS_PN,ZZHRKFT,ZZHRKTX,DUMMY_INCL_EEW_COBL,RE_BUKRS,RE_ACCOUNT,PGEBER,PGRANT_NBR,BUDGET_PD,PBUDGET_PD,J_1TPBUPL,PEROP_BEG,PEROP_END,FASTPAY,IGNR_IVREF,FMFGUS_KEY,FMXDOCNR,FMXYEAR,FMXDOCLN,FMXZEKKN,PRODPER,GST_PART,PLC_SUP,HSN_SAC,RECRF,INWARD_NO,INWARD_DT,GROUND_NO,GROUND_DT,GROUND_TYP,PYMTKEY \nFROM dbo.BSEG ;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_CDC_SNAPSHOT_SCD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CDC Snapshot",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CDC_SNAP_CHANGE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CDC": {
										"FileName": {
											"value": "@pipeline().parameters.FOLDER_NM",
											"type": "Expression"
										}
									},
									"TGT": {
										"SynapseTableName": {
											"value": "@pipeline().parameters.TGT_TBL_NM",
											"type": "Expression"
										},
										"SynapseSchema": {
											"value": "@pipeline().parameters.TGT_DB_NM",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "adls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "synapse-povtug/TMP_STAGING"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse",
							"continuationSettings": {
								"customizedCheckpointKey": "55de936d-2a87-4248-8cdf-6fd70b2812c4"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FOLDER_NM": {
						"type": "string"
					},
					"TGT_DB_NM": {
						"type": "string"
					},
					"TGT_TBL_NM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CDC_SNAP_CHANGE')]",
				"[concat(variables('factoryId'), '/linkedServices/adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/05_COMMON_POC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "INSERT PROCESS LOG",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CNTL_START_PCS]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PROCESS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREAM_SEQ_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_SEQ_ID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "GET SKIP FLAG",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "INSERT PROCESS LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_SKIP_PROCESS",
							"value": {
								"value": "@activity('INSERT PROCESS LOG').output.FIRSTROW.SKIP_PROCESS",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET LOAD ID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "INSERT PROCESS LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_LOAD_ID",
							"value": {
								"value": "@activity('INSERT PROCESS LOG').output.FIRSTROW.LOAD_ID",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CHECK SKIP FLAG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET SKIP FLAG",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GET LOAD ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('V_SKIP_PROCESS'),'0')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SKIP PROCESS",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "controltable",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "RUN_PCS_10_COMMON",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "10_COMMON_POC",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_PCS_NM": {
												"value": "@pipeline().parameters.P_PROCESS_NM",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_LOAD_ID": {
												"value": "@variables('V_LOAD_ID')",
												"type": "Expression"
											},
											"P_AS_AT_DT": {
												"value": "@pipeline().parameters.P_AS_AT_DT",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_PROCESS_NM": {
						"type": "string",
						"defaultValue": "SINGHAARM_SINGHAARM_AGENT"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_STREAM_SEQ_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_AS_AT_DT": {
						"type": "string"
					}
				},
				"variables": {
					"V_SKIP_PROCESS": {
						"type": "String",
						"defaultValue": "999"
					},
					"V_LOAD_ID": {
						"type": "String",
						"defaultValue": "999"
					},
					"STREAM_FLAG": {
						"type": "String"
					},
					"PRCS_NM": {
						"type": "String"
					},
					"PRCS_TYPE": {
						"type": "String"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/controltable')]",
				"[concat(variables('factoryId'), '/pipelines/10_COMMON_POC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/10_COMMON_POC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET PROCESS INFORMATION",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_PCS]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK LATEST LOG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET LATEST LOG').output.FIRSTROW.LTST_LOG_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "controltable",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "controltable",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LATEST LOG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GET PROCESS INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_LTST_PCS]",
								"storedProcedureParameters": {
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK DNDP",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET DNDP').output.FIRSTROW.DPND_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "controltable",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "controltable",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET DNDP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_DPND_PCS]",
								"storedProcedureParameters": {
									"P_AS_AT_DT": {
										"type": "String",
										"value": {
											"value": "@variables('V_AS_AT_DT')",
											"type": "Expression"
										}
									},
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE FAILED ON LATEST LOG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "PREVIOUS CYCLE PROCESS DID NOT COMPLETE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON DEPENDENCIES",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "CHECKING DEPENDENCY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Lookup_PRCS_TYPE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('Lookup_PRCS_TYPE').output.firstRow.PCS_TYPE ",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "EXECUTE_PCS_TYPE1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "20_PROCESS_TYPE1_LOAD",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_Object": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstRow",
														"type": "Expression"
													},
													"P_DataDT": {
														"value": "@pipeline().parameters.P_AS_AT_DT",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "EXECUTE_PCS_TYPE2",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "20_PROCESS_TYPE2_TRANS",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_Object": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstRow",
														"type": "Expression"
													},
													"P_DataDT": {
														"value": "@pipeline().parameters.P_AS_AT_DT",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "3",
									"activities": [
										{
											"name": "EXECUTE_PCS_TYPE3",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "20_PROCESS_TYPE3_CDC_TEMP_TO_LOG",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_Object": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstRow",
														"type": "Expression"
													},
													"P_DataDT": {
														"value": "@pipeline().parameters.P_AS_AT_DT",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup_PRCS_TYPE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@CONCAT('SELECT * FROM CNTL.CNTL_CFG_PCS WHERE PCS_NM = ''', pipeline().parameters.P_PCS_NM, '''')\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE SUCCESS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": "0",
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": "0",
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON COPY ACTIVITY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "COPY ACTIVITY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_PCS_NM": {
						"type": "string"
					},
					"P_RUN_MODE": {
						"type": "string"
					},
					"P_LOAD_ID": {
						"type": "string"
					},
					"P_AS_AT_DT": {
						"type": "string"
					}
				},
				"variables": {
					"V_SKIP_PROCESS": {
						"type": "String"
					},
					"V_AS_AT_DT": {
						"type": "String"
					},
					"V_FILE_NAME": {
						"type": "String"
					},
					"V_STREAM_NM": {
						"type": "String"
					},
					"V_FILE_PATH": {
						"type": "String"
					},
					"V_CONNECTION_NM": {
						"type": "String"
					},
					"PRCS_NM": {
						"type": "String"
					},
					"PRCS_TYPE": {
						"type": "String"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/controltable')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]",
				"[concat(variables('factoryId'), '/pipelines/20_PROCESS_TYPE1_LOAD')]",
				"[concat(variables('factoryId'), '/pipelines/20_PROCESS_TYPE2_TRANS')]",
				"[concat(variables('factoryId'), '/pipelines/20_PROCESS_TYPE3_CDC_TEMP_TO_LOG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_PROCESS_TYPE1_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_FI]",
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_DataDT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_Object.FI_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_Object.PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "DIRECT_DATA_FLOW_CSV_TO_SYNAPSE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIRECT_DATA_FLOW_CSV_TO_SYNAPSE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"FileName": {
											"value": "@activity('Lookup').output.firstRow.FI_NM",
											"type": "Expression"
										}
									},
									"sink1": {
										"SynapseTableName": {
											"value": "@pipeline().parameters.P_Object.TGT_TBL",
											"type": "Expression"
										},
										"SynapseSchema": {
											"value": "@pipeline().parameters.P_Object.TGT_SCHEMA_NM",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "adls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "raw/staging"
							},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_Object": {
						"type": "object"
					},
					"P_DataDT": {
						"type": "string"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/controltable')]",
				"[concat(variables('factoryId'), '/dataflows/DIRECT_DATA_FLOW_CSV_TO_SYNAPSE')]",
				"[concat(variables('factoryId'), '/linkedServices/adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_PROCESS_TYPE2_TRANS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_FI]",
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_DataDT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_Object.FI_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_Object.PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Transform Date and Time",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat('[dbo].[Transform_',pipeline().parameters.P_Object.TGT_TBL,']')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_Object": {
						"type": "object"
					},
					"P_DataDT": {
						"type": "string"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/controltable')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_PROCESS_TYPE3_CDC_TEMP_TO_LOG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_FI]",
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_DataDT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_Object.FI_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_Object.PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Transform Date and Time",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PROC_CDC_INSERT_LOG]",
							"storedProcedureParameters": {
								"SRC_SCHEMA_NM": {
									"value": {
										"value": "@pipeline().parameters.P_Object.SRC_SCHEMA_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"SRC_TBL": {
									"value": {
										"value": "@pipeline().parameters.P_Object.SRC_TBL",
										"type": "Expression"
									},
									"type": "String"
								},
								"TGT_SCHEMA_NM": {
									"value": {
										"value": "@pipeline().parameters.P_Object.TGT_SCHEMA_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"TGT_TBL": {
									"value": {
										"value": "@pipeline().parameters.P_Object.TGT_TBL",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_Object": {
						"type": "object"
					},
					"P_DataDT": {
						"type": "string"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/controltable')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_DATASET_DYNAMIC_tab_delimiter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"fileSystem": "synapse-povtug"
					},
					"columnDelimiter": "\t",
					"escapeChar": "~",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().Filename,'.csv')",
							"type": "Expression"
						},
						"fileSystem": "synapse-povtug"
					},
					"columnDelimiter": "\t",
					"escapeChar": "",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "VBELN\tPOSNR\tETENR\tETTYP\tLFREL\tEDATU\tEZEIT\tWMENG\tBMENG\tVRKME\tLMENG\tMEINS\tBDDAT\tBDART\tPLART\tVBELE\tPOSNE\tETENE\tRSDAT\tIDNNR\tBANFN\tBSART\tBSTYP\tWEPOS\tREPOS\tLRGDT\tPRGRS\tTDDAT\tMBDAT\tLDDAT\tWADAT\tCMENG\tLIFSP\tGRSTR\tABART\tABRUF\tROMS1\tROMS2\tROMS3\tROMEI\tRFORM\tUMVKZ\tUMVKN\tVERFP\tBWART\tBNFPO\tETART\tAUFNR\tPLNUM\tSERNR\tAESKD\tABGES\tMBUHR\tTDUHR\tLDUHR\tWAUHR\tAULWE\tHANDOVERDATE\tHANDOVERTIME\tDLVQTY_BU\tDLVQTY_SU\tOCDQTY_BU\tOCDQTY_SU\tORDQTY_BU\tORDQTY_SU\tCREA_DLVDATE\tREQ_DLVDATE\tBEDAR\t_DATAAGING\tWAERK\tODN_AMOUNT\tDUMMY_SLSDOCSCHEDL_INCL_EEW_PS\tFSH_RALLOC_QTY\tFSH_OS_ID\tFSH_PQR_RC\tMBDAT_DRS",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIRECT_SYNAPSE_DATASET_DYNAMIC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SynapseTableName": {
						"type": "string"
					},
					"SynapseSchema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SynapseSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SynapseTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PARQUET_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "synapse-povtug"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "MANDT",
						"type": "UTF8"
					},
					{
						"name": "BUKRS",
						"type": "UTF8"
					},
					{
						"name": "BELNR",
						"type": "UTF8"
					},
					{
						"name": "GJAHR",
						"type": "UTF8"
					},
					{
						"name": "BUZEI",
						"type": "UTF8"
					},
					{
						"name": "BUZID",
						"type": "UTF8"
					},
					{
						"name": "AUGDT",
						"type": "UTF8"
					},
					{
						"name": "AUGCP",
						"type": "UTF8"
					},
					{
						"name": "AUGBL",
						"type": "UTF8"
					},
					{
						"name": "BSCHL",
						"type": "UTF8"
					},
					{
						"name": "KOART",
						"type": "UTF8"
					},
					{
						"name": "UMSKZ",
						"type": "UTF8"
					},
					{
						"name": "UMSKS",
						"type": "UTF8"
					},
					{
						"name": "ZUMSK",
						"type": "UTF8"
					},
					{
						"name": "SHKZG",
						"type": "UTF8"
					},
					{
						"name": "GSBER",
						"type": "UTF8"
					},
					{
						"name": "PARGB",
						"type": "UTF8"
					},
					{
						"name": "MWSKZ",
						"type": "UTF8"
					},
					{
						"name": "QSSKZ",
						"type": "UTF8"
					},
					{
						"name": "DMBTR",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "WRBTR",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "KZBTR",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PSWBT",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PSWSL",
						"type": "UTF8"
					},
					{
						"name": "TXBHW",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "TXBFW",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "MWSTS",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "WMWST",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "HWBAS",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "FWBAS",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "HWZUZ",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "FWZUZ",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "SHZUZ",
						"type": "UTF8"
					},
					{
						"name": "STEKZ",
						"type": "UTF8"
					},
					{
						"name": "MWART",
						"type": "UTF8"
					},
					{
						"name": "TXGRP",
						"type": "UTF8"
					},
					{
						"name": "KTOSL",
						"type": "UTF8"
					},
					{
						"name": "QSSHB",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "KURSR",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 5
					},
					{
						"name": "GBETR",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "BDIFF",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "BDIF2",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "VALUT",
						"type": "UTF8"
					},
					{
						"name": "ZUONR",
						"type": "UTF8"
					},
					{
						"name": "SGTXT",
						"type": "UTF8"
					},
					{
						"name": "ZINKZ",
						"type": "UTF8"
					},
					{
						"name": "VBUND",
						"type": "UTF8"
					},
					{
						"name": "BEWAR",
						"type": "UTF8"
					},
					{
						"name": "ALTKT",
						"type": "UTF8"
					},
					{
						"name": "VORGN",
						"type": "UTF8"
					},
					{
						"name": "FDLEV",
						"type": "UTF8"
					},
					{
						"name": "FDGRP",
						"type": "UTF8"
					},
					{
						"name": "FDWBT",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "FDTAG",
						"type": "UTF8"
					},
					{
						"name": "FKONT",
						"type": "UTF8"
					},
					{
						"name": "KOKRS",
						"type": "UTF8"
					},
					{
						"name": "KOSTL",
						"type": "UTF8"
					},
					{
						"name": "PROJN",
						"type": "UTF8"
					},
					{
						"name": "AUFNR",
						"type": "UTF8"
					},
					{
						"name": "VBELN",
						"type": "UTF8"
					},
					{
						"name": "VBEL2",
						"type": "UTF8"
					},
					{
						"name": "POSN2",
						"type": "UTF8"
					},
					{
						"name": "ETEN2",
						"type": "UTF8"
					},
					{
						"name": "ANLN1",
						"type": "UTF8"
					},
					{
						"name": "ANLN2",
						"type": "UTF8"
					},
					{
						"name": "ANBWA",
						"type": "UTF8"
					},
					{
						"name": "BZDAT",
						"type": "UTF8"
					},
					{
						"name": "PERNR",
						"type": "UTF8"
					},
					{
						"name": "XUMSW",
						"type": "UTF8"
					},
					{
						"name": "XHRES",
						"type": "UTF8"
					},
					{
						"name": "XKRES",
						"type": "UTF8"
					},
					{
						"name": "XOPVW",
						"type": "UTF8"
					},
					{
						"name": "XCPDD",
						"type": "UTF8"
					},
					{
						"name": "XSKST",
						"type": "UTF8"
					},
					{
						"name": "XSAUF",
						"type": "UTF8"
					},
					{
						"name": "XSPRO",
						"type": "UTF8"
					},
					{
						"name": "XSERG",
						"type": "UTF8"
					},
					{
						"name": "XFAKT",
						"type": "UTF8"
					},
					{
						"name": "XUMAN",
						"type": "UTF8"
					},
					{
						"name": "XANET",
						"type": "UTF8"
					},
					{
						"name": "XSKRL",
						"type": "UTF8"
					},
					{
						"name": "XINVE",
						"type": "UTF8"
					},
					{
						"name": "XPANZ",
						"type": "UTF8"
					},
					{
						"name": "XAUTO",
						"type": "UTF8"
					},
					{
						"name": "XNCOP",
						"type": "UTF8"
					},
					{
						"name": "XZAHL",
						"type": "UTF8"
					},
					{
						"name": "SAKNR",
						"type": "UTF8"
					},
					{
						"name": "HKONT",
						"type": "UTF8"
					},
					{
						"name": "KUNNR",
						"type": "UTF8"
					},
					{
						"name": "LIFNR",
						"type": "UTF8"
					},
					{
						"name": "FILKD",
						"type": "UTF8"
					},
					{
						"name": "XBILK",
						"type": "UTF8"
					},
					{
						"name": "GVTYP",
						"type": "UTF8"
					},
					{
						"name": "HZUON",
						"type": "UTF8"
					},
					{
						"name": "ZFBDT",
						"type": "UTF8"
					},
					{
						"name": "ZTERM",
						"type": "UTF8"
					},
					{
						"name": "ZBD1T",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 0
					},
					{
						"name": "ZBD2T",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 0
					},
					{
						"name": "ZBD3T",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 0
					},
					{
						"name": "ZBD1P",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 3
					},
					{
						"name": "ZBD2P",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 3
					},
					{
						"name": "SKFBT",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "SKNTO",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "WSKTO",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "ZLSCH",
						"type": "UTF8"
					},
					{
						"name": "ZLSPR",
						"type": "UTF8"
					},
					{
						"name": "ZBFIX",
						"type": "UTF8"
					},
					{
						"name": "HBKID",
						"type": "UTF8"
					},
					{
						"name": "BVTYP",
						"type": "UTF8"
					},
					{
						"name": "NEBTR",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "MWSK1",
						"type": "UTF8"
					},
					{
						"name": "DMBT1",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "WRBT1",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "MWSK2",
						"type": "UTF8"
					},
					{
						"name": "DMBT2",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "WRBT2",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "MWSK3",
						"type": "UTF8"
					},
					{
						"name": "DMBT3",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "WRBT3",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "REBZG",
						"type": "UTF8"
					},
					{
						"name": "REBZJ",
						"type": "UTF8"
					},
					{
						"name": "REBZZ",
						"type": "UTF8"
					},
					{
						"name": "REBZT",
						"type": "UTF8"
					},
					{
						"name": "ZOLLT",
						"type": "UTF8"
					},
					{
						"name": "ZOLLD",
						"type": "UTF8"
					},
					{
						"name": "LZBKZ",
						"type": "UTF8"
					},
					{
						"name": "LANDL",
						"type": "UTF8"
					},
					{
						"name": "DIEKZ",
						"type": "UTF8"
					},
					{
						"name": "SAMNR",
						"type": "UTF8"
					},
					{
						"name": "ABPER",
						"type": "UTF8"
					},
					{
						"name": "VRSKZ",
						"type": "UTF8"
					},
					{
						"name": "VRSDT",
						"type": "UTF8"
					},
					{
						"name": "DISBN",
						"type": "UTF8"
					},
					{
						"name": "DISBJ",
						"type": "UTF8"
					},
					{
						"name": "DISBZ",
						"type": "UTF8"
					},
					{
						"name": "WVERW",
						"type": "UTF8"
					},
					{
						"name": "ANFBN",
						"type": "UTF8"
					},
					{
						"name": "ANFBJ",
						"type": "UTF8"
					},
					{
						"name": "ANFBU",
						"type": "UTF8"
					},
					{
						"name": "ANFAE",
						"type": "UTF8"
					},
					{
						"name": "BLNBT",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "BLNKZ",
						"type": "UTF8"
					},
					{
						"name": "BLNPZ",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "MSCHL",
						"type": "UTF8"
					},
					{
						"name": "MANSP",
						"type": "UTF8"
					},
					{
						"name": "MADAT",
						"type": "UTF8"
					},
					{
						"name": "MANST",
						"type": "UTF8"
					},
					{
						"name": "MABER",
						"type": "UTF8"
					},
					{
						"name": "ESRNR",
						"type": "UTF8"
					},
					{
						"name": "ESRRE",
						"type": "UTF8"
					},
					{
						"name": "ESRPZ",
						"type": "UTF8"
					},
					{
						"name": "KLIBT",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "QSZNR",
						"type": "UTF8"
					},
					{
						"name": "QBSHB",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "QSFBT",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "NAVHW",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "NAVFW",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "MATNR",
						"type": "UTF8"
					},
					{
						"name": "WERKS",
						"type": "UTF8"
					},
					{
						"name": "MENGE",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 3
					},
					{
						"name": "MEINS",
						"type": "UTF8"
					},
					{
						"name": "ERFMG",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 3
					},
					{
						"name": "ERFME",
						"type": "UTF8"
					},
					{
						"name": "BPMNG",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 3
					},
					{
						"name": "BPRME",
						"type": "UTF8"
					},
					{
						"name": "EBELN",
						"type": "UTF8"
					},
					{
						"name": "EBELP",
						"type": "UTF8"
					},
					{
						"name": "ZEKKN",
						"type": "UTF8"
					},
					{
						"name": "ELIKZ",
						"type": "UTF8"
					},
					{
						"name": "VPRSV",
						"type": "UTF8"
					},
					{
						"name": "PEINH",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 0
					},
					{
						"name": "BWKEY",
						"type": "UTF8"
					},
					{
						"name": "BWTAR",
						"type": "UTF8"
					},
					{
						"name": "BUSTW",
						"type": "UTF8"
					},
					{
						"name": "REWRT",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "REWWR",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "BONFB",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "BUALT",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PSALT",
						"type": "UTF8"
					},
					{
						"name": "NPREI",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "TBTKZ",
						"type": "UTF8"
					},
					{
						"name": "SPGRP",
						"type": "UTF8"
					},
					{
						"name": "SPGRM",
						"type": "UTF8"
					},
					{
						"name": "SPGRT",
						"type": "UTF8"
					},
					{
						"name": "SPGRG",
						"type": "UTF8"
					},
					{
						"name": "SPGRV",
						"type": "UTF8"
					},
					{
						"name": "SPGRQ",
						"type": "UTF8"
					},
					{
						"name": "STCEG",
						"type": "UTF8"
					},
					{
						"name": "EGBLD",
						"type": "UTF8"
					},
					{
						"name": "EGLLD",
						"type": "UTF8"
					},
					{
						"name": "RSTGR",
						"type": "UTF8"
					},
					{
						"name": "RYACQ",
						"type": "UTF8"
					},
					{
						"name": "RPACQ",
						"type": "UTF8"
					},
					{
						"name": "RDIFF",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "RDIF2",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PRCTR",
						"type": "UTF8"
					},
					{
						"name": "XHKOM",
						"type": "UTF8"
					},
					{
						"name": "VNAME",
						"type": "UTF8"
					},
					{
						"name": "RECID",
						"type": "UTF8"
					},
					{
						"name": "EGRUP",
						"type": "UTF8"
					},
					{
						"name": "VPTNR",
						"type": "UTF8"
					},
					{
						"name": "VERTT",
						"type": "UTF8"
					},
					{
						"name": "VERTN",
						"type": "UTF8"
					},
					{
						"name": "VBEWA",
						"type": "UTF8"
					},
					{
						"name": "DEPOT",
						"type": "UTF8"
					},
					{
						"name": "TXJCD",
						"type": "UTF8"
					},
					{
						"name": "IMKEY",
						"type": "UTF8"
					},
					{
						"name": "DABRZ",
						"type": "UTF8"
					},
					{
						"name": "POPTS",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 6
					},
					{
						"name": "FIPOS",
						"type": "UTF8"
					},
					{
						"name": "KSTRG",
						"type": "UTF8"
					},
					{
						"name": "NPLNR",
						"type": "UTF8"
					},
					{
						"name": "AUFPL",
						"type": "UTF8"
					},
					{
						"name": "APLZL",
						"type": "UTF8"
					},
					{
						"name": "PROJK",
						"type": "UTF8"
					},
					{
						"name": "PAOBJNR",
						"type": "UTF8"
					},
					{
						"name": "PASUBNR",
						"type": "UTF8"
					},
					{
						"name": "SPGRS",
						"type": "UTF8"
					},
					{
						"name": "SPGRC",
						"type": "UTF8"
					},
					{
						"name": "BTYPE",
						"type": "UTF8"
					},
					{
						"name": "ETYPE",
						"type": "UTF8"
					},
					{
						"name": "XEGDR",
						"type": "UTF8"
					},
					{
						"name": "LNRAN",
						"type": "UTF8"
					},
					{
						"name": "HRKFT",
						"type": "UTF8"
					},
					{
						"name": "DMBE2",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "DMBE3",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "DMB21",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "DMB22",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "DMB23",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "DMB31",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "DMB32",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "DMB33",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "MWST2",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "MWST3",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "NAVH2",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "NAVH3",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "SKNT2",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "SKNT3",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "BDIF3",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "RDIF3",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "HWMET",
						"type": "UTF8"
					},
					{
						"name": "GLUPM",
						"type": "UTF8"
					},
					{
						"name": "XRAGL",
						"type": "UTF8"
					},
					{
						"name": "UZAWE",
						"type": "UTF8"
					},
					{
						"name": "LOKKT",
						"type": "UTF8"
					},
					{
						"name": "FISTL",
						"type": "UTF8"
					},
					{
						"name": "GEBER",
						"type": "UTF8"
					},
					{
						"name": "STBUK",
						"type": "UTF8"
					},
					{
						"name": "TXBH2",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "TXBH3",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PPRCT",
						"type": "UTF8"
					},
					{
						"name": "XREF1",
						"type": "UTF8"
					},
					{
						"name": "XREF2",
						"type": "UTF8"
					},
					{
						"name": "KBLNR",
						"type": "UTF8"
					},
					{
						"name": "KBLPOS",
						"type": "UTF8"
					},
					{
						"name": "STTAX",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "FKBER",
						"type": "UTF8"
					},
					{
						"name": "OBZEI",
						"type": "UTF8"
					},
					{
						"name": "XNEGP",
						"type": "UTF8"
					},
					{
						"name": "RFZEI",
						"type": "UTF8"
					},
					{
						"name": "CCBTC",
						"type": "UTF8"
					},
					{
						"name": "KKBER",
						"type": "UTF8"
					},
					{
						"name": "EMPFB",
						"type": "UTF8"
					},
					{
						"name": "XREF3",
						"type": "UTF8"
					},
					{
						"name": "DTWS1",
						"type": "UTF8"
					},
					{
						"name": "DTWS2",
						"type": "UTF8"
					},
					{
						"name": "DTWS3",
						"type": "UTF8"
					},
					{
						"name": "DTWS4",
						"type": "UTF8"
					},
					{
						"name": "GRICD",
						"type": "UTF8"
					},
					{
						"name": "GRIRG",
						"type": "UTF8"
					},
					{
						"name": "GITYP",
						"type": "UTF8"
					},
					{
						"name": "XPYPR",
						"type": "UTF8"
					},
					{
						"name": "KIDNO",
						"type": "UTF8"
					},
					{
						"name": "ABSBT",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "IDXSP",
						"type": "UTF8"
					},
					{
						"name": "LINFV",
						"type": "UTF8"
					},
					{
						"name": "KONTT",
						"type": "UTF8"
					},
					{
						"name": "KONTL",
						"type": "UTF8"
					},
					{
						"name": "UEBGDAT",
						"type": "UTF8"
					},
					{
						"name": "TXDAT",
						"type": "UTF8"
					},
					{
						"name": "AGZEI",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 0
					},
					{
						"name": "PYCUR",
						"type": "UTF8"
					},
					{
						"name": "PYAMT",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "BUPLA",
						"type": "UTF8"
					},
					{
						"name": "SECCO",
						"type": "UTF8"
					},
					{
						"name": "LSTAR",
						"type": "UTF8"
					},
					{
						"name": "CESSION_KZ",
						"type": "UTF8"
					},
					{
						"name": "PRZNR",
						"type": "UTF8"
					},
					{
						"name": "PPDIFF",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PPDIF2",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PPDIF3",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PENLC1",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PENLC2",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PENLC3",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PENFC",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PENDAYS",
						"type": "INT_32"
					},
					{
						"name": "PENRC",
						"type": "UTF8"
					},
					{
						"name": "GRANT_NBR",
						"type": "UTF8"
					},
					{
						"name": "SCTAX",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "FKBER_LONG",
						"type": "UTF8"
					},
					{
						"name": "GMVKZ",
						"type": "UTF8"
					},
					{
						"name": "SRTYPE",
						"type": "UTF8"
					},
					{
						"name": "INTRENO",
						"type": "UTF8"
					},
					{
						"name": "MEASURE",
						"type": "UTF8"
					},
					{
						"name": "AUGGJ",
						"type": "UTF8"
					},
					{
						"name": "PPA_EX_IND",
						"type": "UTF8"
					},
					{
						"name": "DOCLN",
						"type": "UTF8"
					},
					{
						"name": "SEGMENT",
						"type": "UTF8"
					},
					{
						"name": "PSEGMENT",
						"type": "UTF8"
					},
					{
						"name": "PFKBER",
						"type": "UTF8"
					},
					{
						"name": "HKTID",
						"type": "UTF8"
					},
					{
						"name": "KSTAR",
						"type": "UTF8"
					},
					{
						"name": "XLGCLR",
						"type": "UTF8"
					},
					{
						"name": "TAXPS",
						"type": "UTF8"
					},
					{
						"name": "PAYS_PROV",
						"type": "UTF8"
					},
					{
						"name": "PAYS_TRAN",
						"type": "UTF8"
					},
					{
						"name": "MNDID",
						"type": "UTF8"
					},
					{
						"name": "XFRGE_BSEG",
						"type": "UTF8"
					},
					{
						"name": "AWTYP",
						"type": "UTF8"
					},
					{
						"name": "AWKEY",
						"type": "UTF8"
					},
					{
						"name": "AWSYS",
						"type": "UTF8"
					},
					{
						"name": "POSNR",
						"type": "UTF8"
					},
					{
						"name": "BUZEI_SENDER",
						"type": "UTF8"
					},
					{
						"name": "H_MONAT",
						"type": "UTF8"
					},
					{
						"name": "H_BSTAT",
						"type": "UTF8"
					},
					{
						"name": "H_BUDAT",
						"type": "UTF8"
					},
					{
						"name": "H_BLDAT",
						"type": "UTF8"
					},
					{
						"name": "H_WAERS",
						"type": "UTF8"
					},
					{
						"name": "H_BLART",
						"type": "UTF8"
					},
					{
						"name": "H_HWAER",
						"type": "UTF8"
					},
					{
						"name": "H_HWAE2",
						"type": "UTF8"
					},
					{
						"name": "H_HWAE3",
						"type": "UTF8"
					},
					{
						"name": "NETDT",
						"type": "UTF8"
					},
					{
						"name": "SK1DT",
						"type": "UTF8"
					},
					{
						"name": "SK2DT",
						"type": "UTF8"
					},
					{
						"name": "_DATAAGING",
						"type": "UTF8"
					},
					{
						"name": "FQFTYPE",
						"type": "UTF8"
					},
					{
						"name": "LQITEM",
						"type": "UTF8"
					},
					{
						"name": "GKONT",
						"type": "UTF8"
					},
					{
						"name": "GKART",
						"type": "UTF8"
					},
					{
						"name": "GHKON",
						"type": "UTF8"
					},
					{
						"name": "SQUAN",
						"type": "UTF8"
					},
					{
						"name": "ANLN2_PN",
						"type": "UTF8"
					},
					{
						"name": "BWASL_PN",
						"type": "UTF8"
					},
					{
						"name": "BZDAT_PN",
						"type": "UTF8"
					},
					{
						"name": "XVABG_PN",
						"type": "UTF8"
					},
					{
						"name": "ANBTR_PN",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "PROZS_PN",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "ZZHRKFT",
						"type": "UTF8"
					},
					{
						"name": "ZZHRKTX",
						"type": "UTF8"
					},
					{
						"name": "DUMMY_INCL_EEW_COBL",
						"type": "UTF8"
					},
					{
						"name": "RE_BUKRS",
						"type": "UTF8"
					},
					{
						"name": "RE_ACCOUNT",
						"type": "UTF8"
					},
					{
						"name": "PGEBER",
						"type": "UTF8"
					},
					{
						"name": "PGRANT_NBR",
						"type": "UTF8"
					},
					{
						"name": "BUDGET_PD",
						"type": "UTF8"
					},
					{
						"name": "PBUDGET_PD",
						"type": "UTF8"
					},
					{
						"name": "J_1TPBUPL",
						"type": "UTF8"
					},
					{
						"name": "PEROP_BEG",
						"type": "UTF8"
					},
					{
						"name": "PEROP_END",
						"type": "UTF8"
					},
					{
						"name": "FASTPAY",
						"type": "UTF8"
					},
					{
						"name": "IGNR_IVREF",
						"type": "UTF8"
					},
					{
						"name": "FMFGUS_KEY",
						"type": "UTF8"
					},
					{
						"name": "FMXDOCNR",
						"type": "UTF8"
					},
					{
						"name": "FMXYEAR",
						"type": "UTF8"
					},
					{
						"name": "FMXDOCLN",
						"type": "UTF8"
					},
					{
						"name": "FMXZEKKN",
						"type": "UTF8"
					},
					{
						"name": "PRODPER",
						"type": "UTF8"
					},
					{
						"name": "GST_PART",
						"type": "UTF8"
					},
					{
						"name": "PLC_SUP",
						"type": "UTF8"
					},
					{
						"name": "HSN_SAC",
						"type": "UTF8"
					},
					{
						"name": "RECRF",
						"type": "UTF8"
					},
					{
						"name": "INWARD_NO",
						"type": "UTF8"
					},
					{
						"name": "INWARD_DT",
						"type": "UTF8"
					},
					{
						"name": "GROUND_NO",
						"type": "UTF8"
					},
					{
						"name": "GROUND_DT",
						"type": "UTF8"
					},
					{
						"name": "GROUND_TYP",
						"type": "UTF8"
					},
					{
						"name": "PYMTKEY",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARQUET_DATASET_DYNAMIC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "synapse-povtug"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/controltable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime-ADFPOVTUGDEV",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-ADFPOVTUGDEV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime-ADFPOVTUGDEV')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('integrationRuntime-ADFPOVTUGDEV_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDC_SNAP_CHANGE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PARQUET_DATASET_DYNAMIC",
								"type": "DatasetReference"
							},
							"name": "CDC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference"
							},
							"name": "TGT"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: false,",
						"     format: 'parquet') ~> CDC",
						"CDC sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> TGT"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PARQUET_DATASET_DYNAMIC')]",
				"[concat(variables('factoryId'), '/datasets/DIRECT_SYNAPSE_DATASET_DYNAMIC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIRECT_DATA_FLOW_CSV_TO_SYNAPSE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PARQUET_DATASET_DYNAMIC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PARQUET_DATASET_DYNAMIC')]",
				"[concat(variables('factoryId'), '/datasets/DIRECT_SYNAPSE_DATASET_DYNAMIC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BSEG')]",
			"type": "Microsoft.DataFactory/factories/adfcdcs",
			"apiVersion": "2018-06-01",
			"properties": {
				"SourceConnectionsInfo": [
					{
						"SourceEntities": [
							{
								"name": "synapse-povtug/BSEG_DELTA_CHANGES",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "container",
											"value": "synapse-povtug"
										},
										{
											"name": "fileSystem",
											"value": "synapse-povtug"
										},
										{
											"name": "folderPath",
											"value": "BSEG_DELTA_CHANGES"
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "adls",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureBlobFS",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "parquet"
								},
								{
									"name": "dateFormats",
									"value": [
										"MM/dd/yyyy",
										"dd/MM/yyyy",
										"yyyy/MM/dd",
										"MM-dd-yyyy",
										"dd-MM-yyyy",
										"yyyy-MM-dd",
										"dd.MM.yyyy",
										"MM.dd.yyyy",
										"yyyy.MM.dd"
									]
								},
								{
									"name": "timestampFormats",
									"value": [
										"yyyyMMddHHmm",
										"yyyyMMdd HHmm",
										"yyyyMMddHHmmss",
										"yyyyMMdd HHmmss",
										"dd-MM-yyyy HH:mm:ss",
										"dd-MM-yyyy HH:mm",
										"yyyy-M-d H:m:s",
										"yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'",
										"yyyy-M-d\\'T\\'H:m:s\\'Z\\'",
										"yyyy-M-d\\'T\\'H:m:s",
										"yyyy-MM-dd\\'T\\'HH:mm:ss",
										"yyyy-MM-dd HH:mm:ss",
										"yyyy-MM-dd HH:mm",
										"yyyy.MM.dd HH:mm:ss",
										"MM/dd/yyyy HH:mm:ss",
										"M/d/yyyy H:m:s",
										"yyyy/MM/dd HH:mm:ss",
										"yyyy/M/d H:m:s",
										"dd MMM yyyy HH:mm:ss",
										"dd MMMM yyyy HH:mm:ss",
										"d MMM yyyy H:m:s",
										"d MMMM yyyy H:m:s",
										"d-M-yyyy H:m:s",
										"d-M-yyyy H:m",
										"yyyy-M-d H:m",
										"MM/dd/yyyy HH:mm",
										"M/d/yyyy H:m",
										"yyyy/MM/dd HH:mm",
										"yyyy/M/d H:m",
										"dd MMMM yyyy HH:mm",
										"dd MMM yyyy HH:mm",
										"d MMMM yyyy H:m",
										"d MMM yyyy H:m",
										"MM-dd-yyyy hh:mm:ss a",
										"MM-dd-yyyy HH:mm:ss",
										"MM/dd/yyyy hh:mm:ss a",
										"yyyy.MM.dd hh:mm:ss a",
										"MM/dd/yyyy",
										"dd/MM/yyyy",
										"yyyy/MM/dd",
										"MM-dd-yyyy",
										"dd-MM-yyyy",
										"yyyy-MM-dd",
										"dd.MM.yyyy",
										"MM.dd.yyyy",
										"yyyy.MM.dd"
									]
								},
								{
									"name": "enableCdc",
									"value": true
								},
								{
									"name": "skipInitialLoad",
									"value": true
								}
							]
						}
					}
				],
				"TargetConnectionsInfo": [
					{
						"TargetEntities": [
							{
								"name": "dbo.TMP_BSEG_CDC_IN",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "schemaName",
											"value": "dbo"
										},
										{
											"name": "tableName",
											"value": "TMP_BSEG_CDC_IN"
										},
										{
											"name": "deletable",
											"value": true
										},
										{
											"name": "updateable",
											"value": true
										},
										{
											"name": "upsertable",
											"value": true
										},
										{
											"name": "defaultToUpsert",
											"value": true
										},
										{
											"name": "keys",
											"value": [
												"AERECNO",
												"AERUNID"
											]
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "AzureSynapseAnalytics",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureSqlDW",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "table"
								},
								{
									"name": "store",
									"value": "synapseanalytics"
								},
								{
									"name": "databaseType",
									"value": "databaseType"
								},
								{
									"name": "database",
									"value": "database"
								},
								{
									"name": "deletable",
									"value": false
								},
								{
									"name": "insertable",
									"value": true
								},
								{
									"name": "updateable",
									"value": false
								},
								{
									"name": "upsertable",
									"value": false
								},
								{
									"name": "allowCopyCommand",
									"value": false
								},
								{
									"name": "staged",
									"value": true
								},
								{
									"name": "skipDuplicateMapInputs",
									"value": true
								},
								{
									"name": "skipDuplicateMapOutputs",
									"value": true
								}
							]
						},
						"DataMapperMappings": [
							{
								"targetEntityName": "dbo.TMP_BSEG_CDC_IN",
								"sourceEntityName": "synapse-povtug/BSEG_DELTA_CHANGES",
								"sourceConnectionReference": {
									"connectionName": "adls",
									"type": "linkedservicetype"
								},
								"attributeMappingInfo": {
									"attributeMappings": []
								}
							}
						],
						"Relationships": []
					}
				],
				"Policy": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1
					},
					"mode": "Microbatch"
				},
				"status": "Stopped",
				"allowVNetOverride": false,
				"typeProperties": {
					"staging": {
						"linkedService": {
							"referenceName": "adls",
							"type": "LinkedServiceReference"
						},
						"folderPath": "synapse-povtug/TMP_STAGING"
					},
					"linkedServiceType": "AzureBlobFS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		}
	]
}