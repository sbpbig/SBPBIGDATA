{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFPOVTUGDEV"
		},
		"ACDOCA_CDC2_properties_pipeline_parameters_FOLDER_NM": {
			"type": "string",
			"defaultValue": "ACDOCA_PART_CDC2"
		},
		"ACDOCA_CDC2_properties_pipeline_parameters_TGT_DB_NM": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"ACDOCA_CDC2_properties_pipeline_parameters_TGT_TBL_NM": {
			"type": "string",
			"defaultValue": "ACDOCA_CDC_SCD2_PART"
		},
		"CDC_File_Trigger_properties_02_CDC_SNAPSHOT_SCD_parameters_TGT_TBL_NM": {
			"type": "string",
			"defaultValue": "BSEG"
		},
		"CDC_File_Trigger_properties_02_CDC_SNAPSHOT_SCD_parameters_TGT_DB_NM": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"CDC_File_Trigger_properties_02_CDC_SNAPSHOT_SCD_parameters_FOLDER_NM": {
			"type": "string",
			"defaultValue": "BSEG_DELTA_CHANGES"
		},
		"CDC_File_Trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/179dc394-2676-4356-b9ef-c93874f2f4a7/resourceGroups/POV_TUG/providers/Microsoft.Storage/storageAccounts/stpovtug"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/00_INITIAL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Bulk Initial Load",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Move to Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_PROCESSING')",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PARQUET_SOURCE",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@coalesce('')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": {
										"value": "@pipeline().parameters.TGT_TBL_NM",
										"type": "Expression"
									},
									"SynapseSchema": {
										"value": "@pipeline().parameters.TGT_DB_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move to Processing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.FOLDER_NM",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@coalesce('')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_PROCESSING')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move to Archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Bulk Initial Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_PROCESSING')",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@coalesce('')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_ARCHIVE')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FOLDER_NM": {
						"type": "string"
					},
					"TGT_DB_NM": {
						"type": "string"
					},
					"TGT_TBL_NM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/00_INITIAL_LOAD_BAK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Bulk Initial Load",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Move to Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_PROCESSING')",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": {
									"value": "@{concat('TRUNCATE TABLE ', pipeline().parameters.TGT_DB_NM, '.', concat(pipeline().parameters.TGT_TBL_NM, '_TMP'))}",
									"type": "Expression"
								},
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PARQUET_SOURCE",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@coalesce('')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": {
										"value": "@concat(pipeline().parameters.TGT_TBL_NM, '_TMP')",
										"type": "Expression"
									},
									"SynapseSchema": {
										"value": "@pipeline().parameters.TGT_DB_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move to Processing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeEnd": {
										"value": "@addminutes(utcNow(), -30)",
										"type": "Expression"
									},
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.FOLDER_NM",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@coalesce('')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_PROCESSING')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move to Archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Temp Into Target",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_PROCESSING')",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@coalesce('')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_ARCHIVE')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy Temp Into Target",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Bulk Initial Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('INSERT INTO ', pipeline().parameters.TGT_DB_NM, '.', pipeline().parameters.TGT_TBL_NM, ' SELECT * FROM ', pipeline().parameters.TGT_DB_NM, '.', concat(pipeline().parameters.TGT_TBL_NM, '_TMP'))",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FOLDER_NM": {
						"type": "string"
					},
					"TGT_DB_NM": {
						"type": "string"
					},
					"TGT_TBL_NM": {
						"type": "string"
					},
					"YEAR": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/00_INITIAL_LOAD_MANUAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Bulk Initial Load",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.FOLDER_NM",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PARQUET_SOURCE",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@pipeline().parameters.FOLDER_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": {
										"value": "@pipeline().parameters.TGT_TBL_NM",
										"type": "Expression"
									},
									"SynapseSchema": {
										"value": "@pipeline().parameters.TGT_DB_NM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FOLDER_NM": {
						"type": "string",
						"defaultValue": "BSEG_1"
					},
					"TGT_DB_NM": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"TGT_TBL_NM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_CDC_SNAPSHOT_SCD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load to Temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Move to Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_PROCESSING')",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": {
									"value": "@{concat('TRUNCATE TABLE ', pipeline().parameters.TGT_DB_NM, '.', pipeline().parameters.TMP_TBL_NM)}",
									"type": "Expression"
								},
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PARQUET_SOURCE",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@coalesce('')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": {
										"value": "@pipeline().parameters.TMP_TBL_NM",
										"type": "Expression"
									},
									"SynapseSchema": {
										"value": "@pipeline().parameters.TGT_DB_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move to Processing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.FOLDER_NM",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"dataIntegrationUnits": 32
						},
						"inputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@coalesce('')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_PROCESSING')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move to Archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load to Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_PROCESSING')",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@coalesce('')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SRC_PROCESS",
								"type": "DatasetReference",
								"parameters": {
									"FOLDER_NM": {
										"value": "@concat(pipeline().parameters.FOLDER_NM, '_ARCHIVE')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Merge Into Target Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load to Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().parameters.TGT_DB_NM, '.PROC_SCD2_', split(pipeline().parameters.TGT_TBL_NM, '_')[0])",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TGT_TBL_NM": {
						"type": "string",
						"defaultValue": "ACDOCA_CDC_SCD2"
					},
					"TGT_DB_NM": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"FOLDER_NM": {
						"type": "string",
						"defaultValue": "test_cdc_stream"
					},
					"TMP_TBL_NM": {
						"type": "string",
						"defaultValue": "tbl_tmp"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/final')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2022",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "A_2022",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE ACDOCA_CDC_SCD2_ROUNDROBIN;",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PARQUET_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"Foldername": "A_2022"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": "ACDOCA_CDC_SCD2_ROUNDROBIN",
									"SynapseSchema": "dbo"
								}
							}
						]
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "2022",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "INSERT INTO dbo.ACDOCA_CDC_SCD2 \nSELECT * FROM dbo.ACDOCA_CDC_SCD2_ROUNDROBIN"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "2021",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "A_2021",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE ACDOCA_CDC_SCD2_ROUNDROBIN;",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PARQUET_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"Foldername": "A_2021"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": "ACDOCA_CDC_SCD2_ROUNDROBIN",
									"SynapseSchema": "dbo"
								}
							}
						]
					},
					{
						"name": "2020",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Script1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "A_2020",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE ACDOCA_CDC_SCD2_ROUNDROBIN;",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PARQUET_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"Foldername": "A_2020"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": "ACDOCA_CDC_SCD2_ROUNDROBIN",
									"SynapseSchema": "dbo"
								}
							}
						]
					},
					{
						"name": "2019",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Script1_copy2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "A_2019",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE ACDOCA_CDC_SCD2_ROUNDROBIN;",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PARQUET_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"Foldername": "A_2019"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": "ACDOCA_CDC_SCD2_ROUNDROBIN",
									"SynapseSchema": "dbo"
								}
							}
						]
					},
					{
						"name": "2018",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Script1_copy3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "A_2018",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE ACDOCA_CDC_SCD2_ROUNDROBIN;",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PARQUET_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"Foldername": "A_2018"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": "ACDOCA_CDC_SCD2_ROUNDROBIN",
									"SynapseSchema": "dbo"
								}
							}
						]
					},
					{
						"name": "A_2015-2016-2017",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Script1_copy4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "A_2015-2016-2017",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE ACDOCA_CDC_SCD2_ROUNDROBIN;",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PARQUET_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"Foldername": "A_2015-2016-2017"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": "ACDOCA_CDC_SCD2_ROUNDROBIN",
									"SynapseSchema": "dbo"
								}
							}
						]
					},
					{
						"name": "Script1_copy1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "2021",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "INSERT INTO dbo.ACDOCA_CDC_SCD2 \nSELECT * FROM dbo.ACDOCA_CDC_SCD2_ROUNDROBIN"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script1_copy2",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "2020",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "INSERT INTO dbo.ACDOCA_CDC_SCD2 \nSELECT * FROM dbo.ACDOCA_CDC_SCD2_ROUNDROBIN"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script1_copy3",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "2019",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "INSERT INTO dbo.ACDOCA_CDC_SCD2 \nSELECT * FROM dbo.ACDOCA_CDC_SCD2_ROUNDROBIN"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script1_copy4",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "2018",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "INSERT INTO dbo.ACDOCA_CDC_SCD2 \nSELECT * FROM dbo.ACDOCA_CDC_SCD2_ROUNDROBIN"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script1_copy5",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "A_2015-2016-2017",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "INSERT INTO dbo.ACDOCA_CDC_SCD2 \nSELECT * FROM dbo.ACDOCA_CDC_SCD2_ROUNDROBIN"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mftest_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"dataIntegrationUnits": 32,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"SynapseTableName": "tbl_tmp",
									"SynapseSchema": "dbo"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PARQUET_DATASET_DYNAMIC",
								"type": "DatasetReference",
								"parameters": {
									"Foldername": "test_cdc_stream"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Files": {
						"type": "Array"
					},
					"File_List": {
						"type": "Array"
					},
					"count": {
						"type": "Integer",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/controltable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDC_SNAP_CHANGE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PARQUET_SOURCE",
								"type": "DatasetReference"
							},
							"name": "CDC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference"
							},
							"name": "TMPCDC"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          AERUNID as integer,",
						"          AERECNO as integer,",
						"          AEDATTM as string,",
						"          MANDT as string,",
						"          BUKRS as string,",
						"          BELNR as string,",
						"          GJAHR as string,",
						"          BUZEI as string,",
						"          BUZID as string,",
						"          AUGDT as string,",
						"          AUGCP as string,",
						"          AUGBL as string,",
						"          BSCHL as string,",
						"          KOART as string,",
						"          UMSKZ as string,",
						"          UMSKS as string,",
						"          ZUMSK as string,",
						"          SHKZG as string,",
						"          GSBER as string,",
						"          PARGB as string,",
						"          MWSKZ as string,",
						"          QSSKZ as string,",
						"          DMBTR as decimal(29,2),",
						"          WRBTR as decimal(29,2),",
						"          KZBTR as decimal(29,2),",
						"          PSWBT as decimal(29,2),",
						"          PSWSL as string,",
						"          TXBHW as decimal(29,2),",
						"          TXBFW as decimal(29,2),",
						"          MWSTS as decimal(29,2),",
						"          WMWST as decimal(29,2),",
						"          HWBAS as decimal(29,2),",
						"          FWBAS as decimal(29,2),",
						"          HWZUZ as decimal(29,2),",
						"          FWZUZ as decimal(29,2),",
						"          SHZUZ as string,",
						"          STEKZ as string,",
						"          MWART as string,",
						"          TXGRP as string,",
						"          KTOSL as string,",
						"          QSSHB as decimal(29,2),",
						"          KURSR as decimal(29,5),",
						"          GBETR as decimal(29,2),",
						"          BDIFF as decimal(29,2),",
						"          BDIF2 as decimal(29,2),",
						"          VALUT as string,",
						"          ZUONR as string,",
						"          SGTXT as string,",
						"          ZINKZ as string,",
						"          VBUND as string,",
						"          BEWAR as string,",
						"          ALTKT as string,",
						"          VORGN as string,",
						"          FDLEV as string,",
						"          FDGRP as string,",
						"          FDWBT as decimal(29,2),",
						"          FDTAG as string,",
						"          FKONT as string,",
						"          KOKRS as string,",
						"          KOSTL as string,",
						"          PROJN as string,",
						"          AUFNR as string,",
						"          VBELN as string,",
						"          VBEL2 as string,",
						"          POSN2 as string,",
						"          ETEN2 as string,",
						"          ANLN1 as string,",
						"          ANLN2 as string,",
						"          ANBWA as string,",
						"          BZDAT as string,",
						"          PERNR as string,",
						"          XUMSW as string,",
						"          XHRES as string,",
						"          XKRES as string,",
						"          XOPVW as string,",
						"          XCPDD as string,",
						"          XSKST as string,",
						"          XSAUF as string,",
						"          XSPRO as string,",
						"          XSERG as string,",
						"          XFAKT as string,",
						"          XUMAN as string,",
						"          XANET as string,",
						"          XSKRL as string,",
						"          XINVE as string,",
						"          XPANZ as string,",
						"          XAUTO as string,",
						"          XNCOP as string,",
						"          XZAHL as string,",
						"          SAKNR as string,",
						"          HKONT as string,",
						"          KUNNR as string,",
						"          LIFNR as string,",
						"          FILKD as string,",
						"          XBILK as string,",
						"          GVTYP as string,",
						"          HZUON as string,",
						"          ZFBDT as string,",
						"          ZTERM as string,",
						"          ZBD1T as decimal(29,0),",
						"          ZBD2T as decimal(29,0),",
						"          ZBD3T as decimal(29,0),",
						"          ZBD1P as decimal(29,3),",
						"          ZBD2P as decimal(29,3),",
						"          SKFBT as decimal(29,2),",
						"          SKNTO as decimal(29,2),",
						"          WSKTO as decimal(29,2),",
						"          ZLSCH as string,",
						"          ZLSPR as string,",
						"          ZBFIX as string,",
						"          HBKID as string,",
						"          BVTYP as string,",
						"          NEBTR as decimal(29,2),",
						"          MWSK1 as string,",
						"          DMBT1 as decimal(29,2),",
						"          WRBT1 as decimal(29,2),",
						"          MWSK2 as string,",
						"          DMBT2 as decimal(29,2),",
						"          WRBT2 as decimal(29,2),",
						"          MWSK3 as string,",
						"          DMBT3 as decimal(29,2),",
						"          WRBT3 as decimal(29,2),",
						"          REBZG as string,",
						"          REBZJ as string,",
						"          REBZZ as string,",
						"          REBZT as string,",
						"          ZOLLT as string,",
						"          ZOLLD as string,",
						"          LZBKZ as string,",
						"          LANDL as string,",
						"          DIEKZ as string,",
						"          SAMNR as string,",
						"          ABPER as string,",
						"          VRSKZ as string,",
						"          VRSDT as string,",
						"          DISBN as string,",
						"          DISBJ as string,",
						"          DISBZ as string,",
						"          WVERW as string,",
						"          ANFBN as string,",
						"          ANFBJ as string,",
						"          ANFBU as string,",
						"          ANFAE as string,",
						"          BLNBT as decimal(29,2),",
						"          BLNKZ as string,",
						"          BLNPZ as decimal(29,2),",
						"          MSCHL as string,",
						"          MANSP as string,",
						"          MADAT as string,",
						"          MANST as string,",
						"          MABER as string,",
						"          ESRNR as string,",
						"          ESRRE as string,",
						"          ESRPZ as string,",
						"          KLIBT as decimal(29,2),",
						"          QSZNR as string,",
						"          QBSHB as decimal(29,2),",
						"          QSFBT as decimal(29,2),",
						"          NAVHW as decimal(29,2),",
						"          NAVFW as decimal(29,2),",
						"          MATNR as string,",
						"          WERKS as string,",
						"          MENGE as decimal(29,3),",
						"          MEINS as string,",
						"          ERFMG as decimal(29,3),",
						"          ERFME as string,",
						"          BPMNG as decimal(29,3),",
						"          BPRME as string,",
						"          EBELN as string,",
						"          EBELP as string,",
						"          ZEKKN as string,",
						"          ELIKZ as string,",
						"          VPRSV as string,",
						"          PEINH as decimal(29,0),",
						"          BWKEY as string,",
						"          BWTAR as string,",
						"          BUSTW as string,",
						"          REWRT as decimal(29,2),",
						"          REWWR as decimal(29,2),",
						"          BONFB as decimal(29,2),",
						"          BUALT as decimal(29,2),",
						"          PSALT as string,",
						"          NPREI as decimal(29,2),",
						"          TBTKZ as string,",
						"          SPGRP as string,",
						"          SPGRM as string,",
						"          SPGRT as string,",
						"          SPGRG as string,",
						"          SPGRV as string,",
						"          SPGRQ as string,",
						"          STCEG as string,",
						"          EGBLD as string,",
						"          EGLLD as string,",
						"          RSTGR as string,",
						"          RYACQ as string,",
						"          RPACQ as string,",
						"          RDIFF as decimal(29,2),",
						"          RDIF2 as decimal(29,2),",
						"          PRCTR as string,",
						"          XHKOM as string,",
						"          VNAME as string,",
						"          RECID as string,",
						"          EGRUP as string,",
						"          VPTNR as string,",
						"          VERTT as string,",
						"          VERTN as string,",
						"          VBEWA as string,",
						"          DEPOT as string,",
						"          TXJCD as string,",
						"          IMKEY as string,",
						"          DABRZ as string,",
						"          POPTS as decimal(29,6),",
						"          FIPOS as string,",
						"          KSTRG as string,",
						"          NPLNR as string,",
						"          AUFPL as string,",
						"          APLZL as string,",
						"          PROJK as string,",
						"          PAOBJNR as string,",
						"          PASUBNR as string,",
						"          SPGRS as string,",
						"          SPGRC as string,",
						"          BTYPE as string,",
						"          ETYPE as string,",
						"          XEGDR as string,",
						"          LNRAN as string,",
						"          HRKFT as string,",
						"          DMBE2 as decimal(29,2),",
						"          DMBE3 as decimal(29,2),",
						"          DMB21 as decimal(29,2),",
						"          DMB22 as decimal(29,2),",
						"          DMB23 as decimal(29,2),",
						"          DMB31 as decimal(29,2),",
						"          DMB32 as decimal(29,2),",
						"          DMB33 as decimal(29,2),",
						"          MWST2 as decimal(29,2),",
						"          MWST3 as decimal(29,2),",
						"          NAVH2 as decimal(29,2),",
						"          NAVH3 as decimal(29,2),",
						"          SKNT2 as decimal(29,2),",
						"          SKNT3 as decimal(29,2),",
						"          BDIF3 as decimal(29,2),",
						"          RDIF3 as decimal(29,2),",
						"          HWMET as string,",
						"          GLUPM as string,",
						"          XRAGL as string,",
						"          UZAWE as string,",
						"          LOKKT as string,",
						"          FISTL as string,",
						"          GEBER as string,",
						"          STBUK as string,",
						"          TXBH2 as decimal(29,2),",
						"          TXBH3 as decimal(29,2),",
						"          PPRCT as string,",
						"          XREF1 as string,",
						"          XREF2 as string,",
						"          KBLNR as string,",
						"          KBLPOS as string,",
						"          STTAX as decimal(29,2),",
						"          FKBER as string,",
						"          OBZEI as string,",
						"          XNEGP as string,",
						"          RFZEI as string,",
						"          CCBTC as string,",
						"          KKBER as string,",
						"          EMPFB as string,",
						"          XREF3 as string,",
						"          DTWS1 as string,",
						"          DTWS2 as string,",
						"          DTWS3 as string,",
						"          DTWS4 as string,",
						"          GRICD as string,",
						"          GRIRG as string,",
						"          GITYP as string,",
						"          XPYPR as string,",
						"          KIDNO as string,",
						"          ABSBT as decimal(29,2),",
						"          IDXSP as string,",
						"          LINFV as string,",
						"          KONTT as string,",
						"          KONTL as string,",
						"          UEBGDAT as string,",
						"          TXDAT as string,",
						"          AGZEI as decimal(29,0),",
						"          PYCUR as string,",
						"          PYAMT as decimal(29,2),",
						"          BUPLA as string,",
						"          SECCO as string,",
						"          LSTAR as string,",
						"          CESSION_KZ as string,",
						"          PRZNR as string,",
						"          PPDIFF as decimal(29,2),",
						"          PPDIF2 as decimal(29,2),",
						"          PPDIF3 as decimal(29,2),",
						"          PENLC1 as decimal(29,2),",
						"          PENLC2 as decimal(29,2),",
						"          PENLC3 as decimal(29,2),",
						"          PENFC as decimal(29,2),",
						"          PENDAYS as integer,",
						"          PENRC as string,",
						"          GRANT_NBR as string,",
						"          SCTAX as decimal(29,2),",
						"          FKBER_LONG as string,",
						"          GMVKZ as string,",
						"          SRTYPE as string,",
						"          INTRENO as string,",
						"          MEASURE as string,",
						"          AUGGJ as string,",
						"          PPA_EX_IND as string,",
						"          DOCLN as string,",
						"          SEGMENT as string,",
						"          PSEGMENT as string,",
						"          PFKBER as string,",
						"          HKTID as string,",
						"          KSTAR as string,",
						"          XLGCLR as string,",
						"          TAXPS as string,",
						"          PAYS_PROV as string,",
						"          PAYS_TRAN as string,",
						"          MNDID as string,",
						"          XFRGE_BSEG as string,",
						"          AWTYP as string,",
						"          AWKEY as string,",
						"          AWSYS as string,",
						"          POSNR as string,",
						"          BUZEI_SENDER as string,",
						"          H_MONAT as string,",
						"          H_BSTAT as string,",
						"          H_BUDAT as string,",
						"          H_BLDAT as string,",
						"          H_WAERS as string,",
						"          H_BLART as string,",
						"          H_HWAER as string,",
						"          H_HWAE2 as string,",
						"          H_HWAE3 as string,",
						"          NETDT as string,",
						"          SK1DT as string,",
						"          SK2DT as string,",
						"          {_DATAAGING} as string,",
						"          FQFTYPE as string,",
						"          LQITEM as string,",
						"          GKONT as string,",
						"          GKART as string,",
						"          GHKON as string,",
						"          SQUAN as string,",
						"          ANLN2_PN as string,",
						"          BWASL_PN as string,",
						"          BZDAT_PN as string,",
						"          XVABG_PN as string,",
						"          ANBTR_PN as decimal(29,2),",
						"          PROZS_PN as decimal(29,2),",
						"          ZZHRKFT as string,",
						"          ZZHRKTX as string,",
						"          DUMMY_INCL_EEW_COBL as string,",
						"          RE_BUKRS as string,",
						"          RE_ACCOUNT as string,",
						"          PGEBER as string,",
						"          PGRANT_NBR as string,",
						"          BUDGET_PD as string,",
						"          PBUDGET_PD as string,",
						"          J_1TPBUPL as string,",
						"          PEROP_BEG as string,",
						"          PEROP_END as string,",
						"          FASTPAY as string,",
						"          IGNR_IVREF as string,",
						"          FMFGUS_KEY as string,",
						"          FMXDOCNR as string,",
						"          FMXYEAR as string,",
						"          FMXDOCLN as string,",
						"          FMXZEKKN as string,",
						"          PRODPER as string,",
						"          GST_PART as string,",
						"          PLC_SUP as string,",
						"          HSN_SAC as string,",
						"          RECRF as string,",
						"          INWARD_NO as string,",
						"          INWARD_DT as string,",
						"          GROUND_NO as string,",
						"          GROUND_DT as string,",
						"          GROUND_TYP as string,",
						"          PYMTKEY as string,",
						"          OPFLAG as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: false,",
						"     format: 'parquet') ~> CDC",
						"CDC sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> TMPCDC"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDC_SNAP_CHANGE_BAK')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PARQUET_SOURCE",
								"type": "DatasetReference"
							},
							"name": "CDC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference"
							},
							"name": "TMPCDC"
						},
						{
							"dataset": {
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference"
							},
							"name": "CDCLOG"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          AERUNID as integer,",
						"          AERECNO as integer,",
						"          AEDATTM as string,",
						"          MANDT as string,",
						"          BUKRS as string,",
						"          BELNR as string,",
						"          GJAHR as string,",
						"          BUZEI as string,",
						"          BUZID as string,",
						"          AUGDT as string,",
						"          AUGCP as string,",
						"          AUGBL as string,",
						"          BSCHL as string,",
						"          KOART as string,",
						"          UMSKZ as string,",
						"          UMSKS as string,",
						"          ZUMSK as string,",
						"          SHKZG as string,",
						"          GSBER as string,",
						"          PARGB as string,",
						"          MWSKZ as string,",
						"          QSSKZ as string,",
						"          DMBTR as decimal(29,2),",
						"          WRBTR as decimal(29,2),",
						"          KZBTR as decimal(29,2),",
						"          PSWBT as decimal(29,2),",
						"          PSWSL as string,",
						"          TXBHW as decimal(29,2),",
						"          TXBFW as decimal(29,2),",
						"          MWSTS as decimal(29,2),",
						"          WMWST as decimal(29,2),",
						"          HWBAS as decimal(29,2),",
						"          FWBAS as decimal(29,2),",
						"          HWZUZ as decimal(29,2),",
						"          FWZUZ as decimal(29,2),",
						"          SHZUZ as string,",
						"          STEKZ as string,",
						"          MWART as string,",
						"          TXGRP as string,",
						"          KTOSL as string,",
						"          QSSHB as decimal(29,2),",
						"          KURSR as decimal(29,5),",
						"          GBETR as decimal(29,2),",
						"          BDIFF as decimal(29,2),",
						"          BDIF2 as decimal(29,2),",
						"          VALUT as string,",
						"          ZUONR as string,",
						"          SGTXT as string,",
						"          ZINKZ as string,",
						"          VBUND as string,",
						"          BEWAR as string,",
						"          ALTKT as string,",
						"          VORGN as string,",
						"          FDLEV as string,",
						"          FDGRP as string,",
						"          FDWBT as decimal(29,2),",
						"          FDTAG as string,",
						"          FKONT as string,",
						"          KOKRS as string,",
						"          KOSTL as string,",
						"          PROJN as string,",
						"          AUFNR as string,",
						"          VBELN as string,",
						"          VBEL2 as string,",
						"          POSN2 as string,",
						"          ETEN2 as string,",
						"          ANLN1 as string,",
						"          ANLN2 as string,",
						"          ANBWA as string,",
						"          BZDAT as string,",
						"          PERNR as string,",
						"          XUMSW as string,",
						"          XHRES as string,",
						"          XKRES as string,",
						"          XOPVW as string,",
						"          XCPDD as string,",
						"          XSKST as string,",
						"          XSAUF as string,",
						"          XSPRO as string,",
						"          XSERG as string,",
						"          XFAKT as string,",
						"          XUMAN as string,",
						"          XANET as string,",
						"          XSKRL as string,",
						"          XINVE as string,",
						"          XPANZ as string,",
						"          XAUTO as string,",
						"          XNCOP as string,",
						"          XZAHL as string,",
						"          SAKNR as string,",
						"          HKONT as string,",
						"          KUNNR as string,",
						"          LIFNR as string,",
						"          FILKD as string,",
						"          XBILK as string,",
						"          GVTYP as string,",
						"          HZUON as string,",
						"          ZFBDT as string,",
						"          ZTERM as string,",
						"          ZBD1T as decimal(29,0),",
						"          ZBD2T as decimal(29,0),",
						"          ZBD3T as decimal(29,0),",
						"          ZBD1P as decimal(29,3),",
						"          ZBD2P as decimal(29,3),",
						"          SKFBT as decimal(29,2),",
						"          SKNTO as decimal(29,2),",
						"          WSKTO as decimal(29,2),",
						"          ZLSCH as string,",
						"          ZLSPR as string,",
						"          ZBFIX as string,",
						"          HBKID as string,",
						"          BVTYP as string,",
						"          NEBTR as decimal(29,2),",
						"          MWSK1 as string,",
						"          DMBT1 as decimal(29,2),",
						"          WRBT1 as decimal(29,2),",
						"          MWSK2 as string,",
						"          DMBT2 as decimal(29,2),",
						"          WRBT2 as decimal(29,2),",
						"          MWSK3 as string,",
						"          DMBT3 as decimal(29,2),",
						"          WRBT3 as decimal(29,2),",
						"          REBZG as string,",
						"          REBZJ as string,",
						"          REBZZ as string,",
						"          REBZT as string,",
						"          ZOLLT as string,",
						"          ZOLLD as string,",
						"          LZBKZ as string,",
						"          LANDL as string,",
						"          DIEKZ as string,",
						"          SAMNR as string,",
						"          ABPER as string,",
						"          VRSKZ as string,",
						"          VRSDT as string,",
						"          DISBN as string,",
						"          DISBJ as string,",
						"          DISBZ as string,",
						"          WVERW as string,",
						"          ANFBN as string,",
						"          ANFBJ as string,",
						"          ANFBU as string,",
						"          ANFAE as string,",
						"          BLNBT as decimal(29,2),",
						"          BLNKZ as string,",
						"          BLNPZ as decimal(29,2),",
						"          MSCHL as string,",
						"          MANSP as string,",
						"          MADAT as string,",
						"          MANST as string,",
						"          MABER as string,",
						"          ESRNR as string,",
						"          ESRRE as string,",
						"          ESRPZ as string,",
						"          KLIBT as decimal(29,2),",
						"          QSZNR as string,",
						"          QBSHB as decimal(29,2),",
						"          QSFBT as decimal(29,2),",
						"          NAVHW as decimal(29,2),",
						"          NAVFW as decimal(29,2),",
						"          MATNR as string,",
						"          WERKS as string,",
						"          MENGE as decimal(29,3),",
						"          MEINS as string,",
						"          ERFMG as decimal(29,3),",
						"          ERFME as string,",
						"          BPMNG as decimal(29,3),",
						"          BPRME as string,",
						"          EBELN as string,",
						"          EBELP as string,",
						"          ZEKKN as string,",
						"          ELIKZ as string,",
						"          VPRSV as string,",
						"          PEINH as decimal(29,0),",
						"          BWKEY as string,",
						"          BWTAR as string,",
						"          BUSTW as string,",
						"          REWRT as decimal(29,2),",
						"          REWWR as decimal(29,2),",
						"          BONFB as decimal(29,2),",
						"          BUALT as decimal(29,2),",
						"          PSALT as string,",
						"          NPREI as decimal(29,2),",
						"          TBTKZ as string,",
						"          SPGRP as string,",
						"          SPGRM as string,",
						"          SPGRT as string,",
						"          SPGRG as string,",
						"          SPGRV as string,",
						"          SPGRQ as string,",
						"          STCEG as string,",
						"          EGBLD as string,",
						"          EGLLD as string,",
						"          RSTGR as string,",
						"          RYACQ as string,",
						"          RPACQ as string,",
						"          RDIFF as decimal(29,2),",
						"          RDIF2 as decimal(29,2),",
						"          PRCTR as string,",
						"          XHKOM as string,",
						"          VNAME as string,",
						"          RECID as string,",
						"          EGRUP as string,",
						"          VPTNR as string,",
						"          VERTT as string,",
						"          VERTN as string,",
						"          VBEWA as string,",
						"          DEPOT as string,",
						"          TXJCD as string,",
						"          IMKEY as string,",
						"          DABRZ as string,",
						"          POPTS as decimal(29,6),",
						"          FIPOS as string,",
						"          KSTRG as string,",
						"          NPLNR as string,",
						"          AUFPL as string,",
						"          APLZL as string,",
						"          PROJK as string,",
						"          PAOBJNR as string,",
						"          PASUBNR as string,",
						"          SPGRS as string,",
						"          SPGRC as string,",
						"          BTYPE as string,",
						"          ETYPE as string,",
						"          XEGDR as string,",
						"          LNRAN as string,",
						"          HRKFT as string,",
						"          DMBE2 as decimal(29,2),",
						"          DMBE3 as decimal(29,2),",
						"          DMB21 as decimal(29,2),",
						"          DMB22 as decimal(29,2),",
						"          DMB23 as decimal(29,2),",
						"          DMB31 as decimal(29,2),",
						"          DMB32 as decimal(29,2),",
						"          DMB33 as decimal(29,2),",
						"          MWST2 as decimal(29,2),",
						"          MWST3 as decimal(29,2),",
						"          NAVH2 as decimal(29,2),",
						"          NAVH3 as decimal(29,2),",
						"          SKNT2 as decimal(29,2),",
						"          SKNT3 as decimal(29,2),",
						"          BDIF3 as decimal(29,2),",
						"          RDIF3 as decimal(29,2),",
						"          HWMET as string,",
						"          GLUPM as string,",
						"          XRAGL as string,",
						"          UZAWE as string,",
						"          LOKKT as string,",
						"          FISTL as string,",
						"          GEBER as string,",
						"          STBUK as string,",
						"          TXBH2 as decimal(29,2),",
						"          TXBH3 as decimal(29,2),",
						"          PPRCT as string,",
						"          XREF1 as string,",
						"          XREF2 as string,",
						"          KBLNR as string,",
						"          KBLPOS as string,",
						"          STTAX as decimal(29,2),",
						"          FKBER as string,",
						"          OBZEI as string,",
						"          XNEGP as string,",
						"          RFZEI as string,",
						"          CCBTC as string,",
						"          KKBER as string,",
						"          EMPFB as string,",
						"          XREF3 as string,",
						"          DTWS1 as string,",
						"          DTWS2 as string,",
						"          DTWS3 as string,",
						"          DTWS4 as string,",
						"          GRICD as string,",
						"          GRIRG as string,",
						"          GITYP as string,",
						"          XPYPR as string,",
						"          KIDNO as string,",
						"          ABSBT as decimal(29,2),",
						"          IDXSP as string,",
						"          LINFV as string,",
						"          KONTT as string,",
						"          KONTL as string,",
						"          UEBGDAT as string,",
						"          TXDAT as string,",
						"          AGZEI as decimal(29,0),",
						"          PYCUR as string,",
						"          PYAMT as decimal(29,2),",
						"          BUPLA as string,",
						"          SECCO as string,",
						"          LSTAR as string,",
						"          CESSION_KZ as string,",
						"          PRZNR as string,",
						"          PPDIFF as decimal(29,2),",
						"          PPDIF2 as decimal(29,2),",
						"          PPDIF3 as decimal(29,2),",
						"          PENLC1 as decimal(29,2),",
						"          PENLC2 as decimal(29,2),",
						"          PENLC3 as decimal(29,2),",
						"          PENFC as decimal(29,2),",
						"          PENDAYS as integer,",
						"          PENRC as string,",
						"          GRANT_NBR as string,",
						"          SCTAX as decimal(29,2),",
						"          FKBER_LONG as string,",
						"          GMVKZ as string,",
						"          SRTYPE as string,",
						"          INTRENO as string,",
						"          MEASURE as string,",
						"          AUGGJ as string,",
						"          PPA_EX_IND as string,",
						"          DOCLN as string,",
						"          SEGMENT as string,",
						"          PSEGMENT as string,",
						"          PFKBER as string,",
						"          HKTID as string,",
						"          KSTAR as string,",
						"          XLGCLR as string,",
						"          TAXPS as string,",
						"          PAYS_PROV as string,",
						"          PAYS_TRAN as string,",
						"          MNDID as string,",
						"          XFRGE_BSEG as string,",
						"          AWTYP as string,",
						"          AWKEY as string,",
						"          AWSYS as string,",
						"          POSNR as string,",
						"          BUZEI_SENDER as string,",
						"          H_MONAT as string,",
						"          H_BSTAT as string,",
						"          H_BUDAT as string,",
						"          H_BLDAT as string,",
						"          H_WAERS as string,",
						"          H_BLART as string,",
						"          H_HWAER as string,",
						"          H_HWAE2 as string,",
						"          H_HWAE3 as string,",
						"          NETDT as string,",
						"          SK1DT as string,",
						"          SK2DT as string,",
						"          {_DATAAGING} as string,",
						"          FQFTYPE as string,",
						"          LQITEM as string,",
						"          GKONT as string,",
						"          GKART as string,",
						"          GHKON as string,",
						"          SQUAN as string,",
						"          ANLN2_PN as string,",
						"          BWASL_PN as string,",
						"          BZDAT_PN as string,",
						"          XVABG_PN as string,",
						"          ANBTR_PN as decimal(29,2),",
						"          PROZS_PN as decimal(29,2),",
						"          ZZHRKFT as string,",
						"          ZZHRKTX as string,",
						"          DUMMY_INCL_EEW_COBL as string,",
						"          RE_BUKRS as string,",
						"          RE_ACCOUNT as string,",
						"          PGEBER as string,",
						"          PGRANT_NBR as string,",
						"          BUDGET_PD as string,",
						"          PBUDGET_PD as string,",
						"          J_1TPBUPL as string,",
						"          PEROP_BEG as string,",
						"          PEROP_END as string,",
						"          FASTPAY as string,",
						"          IGNR_IVREF as string,",
						"          FMFGUS_KEY as string,",
						"          FMXDOCNR as string,",
						"          FMXYEAR as string,",
						"          FMXDOCLN as string,",
						"          FMXZEKKN as string,",
						"          PRODPER as string,",
						"          GST_PART as string,",
						"          PLC_SUP as string,",
						"          HSN_SAC as string,",
						"          RECRF as string,",
						"          INWARD_NO as string,",
						"          INWARD_DT as string,",
						"          GROUND_NO as string,",
						"          GROUND_DT as string,",
						"          GROUND_TYP as string,",
						"          PYMTKEY as string,",
						"          OPFLAG as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: false,",
						"     format: 'parquet') ~> CDC",
						"CDC sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> TMPCDC",
						"CDC sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> CDCLOG"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIRECT_DATA_FLOW_CSV_TO_SYNAPSE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PARQUET_DATASET_DYNAMIC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DIRECT_SYNAPSE_DATASET_DYNAMIC",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_CDC_SNAPSHOT_SCD_BAK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CDC SNAPSHOT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "INSERT PROCESS LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CDC_SNAP_CHANGE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CDC": {
										"FOLDER_NM": {
											"value": "@activity('GET PROCESS INFORMATION').output.firstRow.PTH",
											"type": "Expression"
										}
									},
									"TMPCDC": {
										"SynapseTableName": {
											"value": "@concat('TMP_CDC_', activity('GET PROCESS INFORMATION').output.firstRow.TGT_TBL)",
											"type": "Expression"
										},
										"SynapseSchema": {
											"value": "@activity('GET PROCESS INFORMATION').output.firstRow.TGT_SCHEMA_NM",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "adls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "synapse-povtug/TMP_STAGING"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "55de936d-2a87-4248-8cdf-6fd70b2812c4"
							}
						}
					},
					{
						"name": "GET PROCESS INFORMATION",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_PCS_CDC]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE SUCCESS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CDC SNAPSHOT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": "0",
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": "0",
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@activity('INSERT PROCESS LOG').output.FIRSTROW.LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON CDC SNAPSHOT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CDC SNAPSHOT",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@activity('INSERT PROCESS LOG').output.FIRSTROW.LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "CDC SNAPSHOT FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "INSERT PROCESS LOG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GET PROCESS INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CNTL_START_PCS]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": "F"
									},
									"P_STREAM_SEQ_ID": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_PCS_NM": {
						"type": "string",
						"defaultValue": "LD_CDC_BSEG"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CDC_SNAP_CHANGE')]",
				"[concat(variables('factoryId'), '/datasets/controltable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_CDC_SNAPSHOT_SCD_BAK2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CDC SNAPSHOT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CDC_SNAP_CHANGE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CDC": {
										"FOLDER_NM": {
											"value": "@pipeline().parameters.FOLDER_NM",
											"type": "Expression"
										}
									},
									"TMPCDC": {
										"SynapseTableName": {
											"value": "@concat('TMP_CDC_', pipeline().parameters.TGT_TBL_NM)",
											"type": "Expression"
										},
										"SynapseSchema": {
											"value": "@pipeline().parameters.TGT_DB_NM",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "adls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "synapse-povtug/TMP_STAGING"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "55de936d-2a87-4248-8cdf-6fd70b2812c4"
							}
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TGT_TBL_NM": {
						"type": "string",
						"defaultValue": "BSEG"
					},
					"TGT_DB_NM": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"FOLDER_NM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CDC_SNAP_CHANGE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_PROCESS_TYPE1_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_FI]",
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_DataDT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_Object.FI_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_Object.PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "DIRECT_DATA_FLOW_CSV_TO_SYNAPSE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIRECT_DATA_FLOW_CSV_TO_SYNAPSE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"Foldername": {
											"value": "@activity('Lookup').output.firstRow.FI_NM",
											"type": "Expression"
										}
									},
									"sink1": {
										"SynapseTableName": {
											"value": "@pipeline().parameters.P_Object.TGT_TBL",
											"type": "Expression"
										},
										"SynapseSchema": {
											"value": "@pipeline().parameters.P_Object.TGT_SCHEMA_NM",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "adls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "raw/staging"
							},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Object": {
						"type": "object"
					},
					"P_DataDT": {
						"type": "string"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/controltable')]",
				"[concat(variables('factoryId'), '/dataflows/DIRECT_DATA_FLOW_CSV_TO_SYNAPSE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_PROCESS_TYPE2_TRANS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_FI]",
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_DataDT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_Object.FI_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_Object.PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Transform Date and Time",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat('[dbo].[Transform_',pipeline().parameters.P_Object.TGT_TBL,']')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Object": {
						"type": "object"
					},
					"P_DataDT": {
						"type": "string"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/controltable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_PROCESS_TYPE3_CDC_INIT_TEMP_TO_LOG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_FI]",
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_DataDT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_Object.FI_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_Object.PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SQL Script",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('INSERT INTO ',pipeline().parameters.P_Object.TGT_SCHEMA_NM,'.',pipeline().parameters.P_Object.TGT_TBL,'  (AEDATTM,MANDT,BUKRS,BELNR,GJAHR,BUZEI,BUZID,AUGDT,AUGCP,AUGBL,BSCHL,KOART,UMSKZ,UMSKS,ZUMSK,SHKZG,GSBER,PARGB,MWSKZ,QSSKZ,DMBTR,WRBTR,KZBTR,PSWBT,PSWSL,TXBHW,TXBFW,MWSTS,WMWST,HWBAS,FWBAS,HWZUZ,FWZUZ,SHZUZ,STEKZ,MWART,TXGRP,KTOSL,QSSHB,KURSR,GBETR,BDIFF,BDIF2,VALUT,ZUONR,SGTXT,ZINKZ,VBUND,BEWAR,ALTKT,VORGN,FDLEV,FDGRP,FDWBT,FDTAG,FKONT,KOKRS,KOSTL,PROJN,AUFNR,VBELN,VBEL2,POSN2,ETEN2,ANLN1,ANLN2,ANBWA,BZDAT,PERNR,XUMSW,XHRES,XKRES,XOPVW,XCPDD,XSKST,XSAUF,XSPRO,XSERG,XFAKT,XUMAN,XANET,XSKRL,XINVE,XPANZ,XAUTO,XNCOP,XZAHL,SAKNR,HKONT,KUNNR,LIFNR,FILKD,XBILK,GVTYP,HZUON,ZFBDT,ZTERM,ZBD1T,ZBD2T,ZBD3T,ZBD1P,ZBD2P,SKFBT,SKNTO,WSKTO,ZLSCH,ZLSPR,ZBFIX,HBKID,BVTYP,NEBTR,MWSK1,DMBT1,WRBT1,MWSK2,DMBT2,WRBT2,MWSK3,DMBT3,WRBT3,REBZG,REBZJ,REBZZ,REBZT,ZOLLT,ZOLLD,LZBKZ,LANDL,DIEKZ,SAMNR,ABPER,VRSKZ,VRSDT,DISBN,DISBJ,DISBZ,WVERW,ANFBN,ANFBJ,ANFBU,ANFAE,BLNBT,BLNKZ,BLNPZ,MSCHL,MANSP,MADAT,MANST,MABER,ESRNR,ESRRE,ESRPZ,KLIBT,QSZNR,QBSHB,QSFBT,NAVHW,NAVFW,MATNR,WERKS,MENGE,MEINS,ERFMG,ERFME,BPMNG,BPRME,EBELN,EBELP,ZEKKN,ELIKZ,VPRSV,PEINH,BWKEY,BWTAR,BUSTW,REWRT,REWWR,BONFB,BUALT,PSALT,NPREI,TBTKZ,SPGRP,SPGRM,SPGRT,SPGRG,SPGRV,SPGRQ,STCEG,EGBLD,EGLLD,RSTGR,RYACQ,RPACQ,RDIFF,RDIF2,PRCTR,XHKOM,VNAME,RECID,EGRUP,VPTNR,VERTT,VERTN,VBEWA,DEPOT,TXJCD,IMKEY,DABRZ,POPTS,FIPOS,KSTRG,NPLNR,AUFPL,APLZL,PROJK,PAOBJNR,PASUBNR,SPGRS,SPGRC,BTYPE,ETYPE,XEGDR,LNRAN,HRKFT,DMBE2,DMBE3,DMB21,DMB22,DMB23,DMB31,DMB32,DMB33,MWST2,MWST3,NAVH2,NAVH3,SKNT2,SKNT3,BDIF3,RDIF3,HWMET,GLUPM,XRAGL,UZAWE,LOKKT,FISTL,GEBER,STBUK,TXBH2,TXBH3,PPRCT,XREF1,XREF2,KBLNR,KBLPOS,STTAX,FKBER,OBZEI,XNEGP,RFZEI,CCBTC,KKBER,EMPFB,XREF3,DTWS1,DTWS2,DTWS3,DTWS4,GRICD,GRIRG,GITYP,XPYPR,KIDNO,ABSBT,IDXSP,LINFV,KONTT,KONTL,UEBGDAT,TXDAT,AGZEI,PYCUR,PYAMT,BUPLA,SECCO,LSTAR,CESSION_KZ,PRZNR,PPDIFF,PPDIF2,PPDIF3,PENLC1,PENLC2,PENLC3,PENFC,PENDAYS,PENRC,GRANT_NBR,SCTAX,FKBER_LONG,GMVKZ,SRTYPE,INTRENO,MEASURE,AUGGJ,PPA_EX_IND,DOCLN,SEGMENT,PSEGMENT,PFKBER,HKTID,KSTAR,XLGCLR,TAXPS,PAYS_PROV,PAYS_TRAN,MNDID,XFRGE_BSEG,AWTYP,AWKEY,AWSYS,POSNR,BUZEI_SENDER,H_MONAT,H_BSTAT,H_BUDAT,H_BLDAT,H_WAERS,H_BLART,H_HWAER,H_HWAE2,H_HWAE3,NETDT,SK1DT,SK2DT,_DATAAGING,FQFTYPE,LQITEM,GKONT,GKART,GHKON,SQUAN,ANLN2_PN,BWASL_PN,BZDAT_PN,XVABG_PN,ANBTR_PN,PROZS_PN,ZZHRKFT,ZZHRKTX,DUMMY_INCL_EEW_COBL,RE_BUKRS,RE_ACCOUNT,PGEBER,PGRANT_NBR,BUDGET_PD,PBUDGET_PD,J_1TPBUPL,PEROP_BEG,PEROP_END,FASTPAY,IGNR_IVREF,FMFGUS_KEY,FMXDOCNR,FMXYEAR,FMXDOCLN,FMXZEKKN,PRODPER,GST_PART,PLC_SUP,HSN_SAC,RECRF,INWARD_NO,INWARD_DT,GROUND_NO,GROUND_DT,GROUND_TYP,PYMTKEY)\nSELECT GETDATE(),MANDT,BUKRS,BELNR,GJAHR,BUZEI,BUZID,AUGDT,AUGCP,AUGBL,BSCHL,KOART,UMSKZ,UMSKS,ZUMSK,SHKZG,GSBER,PARGB,MWSKZ,QSSKZ,DMBTR,WRBTR,KZBTR,PSWBT,PSWSL,TXBHW,TXBFW,MWSTS,WMWST,HWBAS,FWBAS,HWZUZ,FWZUZ,SHZUZ,STEKZ,MWART,TXGRP,KTOSL,QSSHB,KURSR,GBETR,BDIFF,BDIF2,VALUT,ZUONR,SGTXT,ZINKZ,VBUND,BEWAR,ALTKT,VORGN,FDLEV,FDGRP,FDWBT,FDTAG,FKONT,KOKRS,KOSTL,PROJN,AUFNR,VBELN,VBEL2,POSN2,ETEN2,ANLN1,ANLN2,ANBWA,BZDAT,PERNR,XUMSW,XHRES,XKRES,XOPVW,XCPDD,XSKST,XSAUF,XSPRO,XSERG,XFAKT,XUMAN,XANET,XSKRL,XINVE,XPANZ,XAUTO,XNCOP,XZAHL,SAKNR,HKONT,KUNNR,LIFNR,FILKD,XBILK,GVTYP,HZUON,ZFBDT,ZTERM,ZBD1T,ZBD2T,ZBD3T,ZBD1P,ZBD2P,SKFBT,SKNTO,WSKTO,ZLSCH,ZLSPR,ZBFIX,HBKID,BVTYP,NEBTR,MWSK1,DMBT1,WRBT1,MWSK2,DMBT2,WRBT2,MWSK3,DMBT3,WRBT3,REBZG,REBZJ,REBZZ,REBZT,ZOLLT,ZOLLD,LZBKZ,LANDL,DIEKZ,SAMNR,ABPER,VRSKZ,VRSDT,DISBN,DISBJ,DISBZ,WVERW,ANFBN,ANFBJ,ANFBU,ANFAE,BLNBT,BLNKZ,BLNPZ,MSCHL,MANSP,MADAT,MANST,MABER,ESRNR,ESRRE,ESRPZ,KLIBT,QSZNR,QBSHB,QSFBT,NAVHW,NAVFW,MATNR,WERKS,MENGE,MEINS,ERFMG,ERFME,BPMNG,BPRME,EBELN,EBELP,ZEKKN,ELIKZ,VPRSV,PEINH,BWKEY,BWTAR,BUSTW,REWRT,REWWR,BONFB,BUALT,PSALT,NPREI,TBTKZ,SPGRP,SPGRM,SPGRT,SPGRG,SPGRV,SPGRQ,STCEG,EGBLD,EGLLD,RSTGR,RYACQ,RPACQ,RDIFF,RDIF2,PRCTR,XHKOM,VNAME,RECID,EGRUP,VPTNR,VERTT,VERTN,VBEWA,DEPOT,TXJCD,IMKEY,DABRZ,POPTS,FIPOS,KSTRG,NPLNR,AUFPL,APLZL,PROJK,PAOBJNR,PASUBNR,SPGRS,SPGRC,BTYPE,ETYPE,XEGDR,LNRAN,HRKFT,DMBE2,DMBE3,DMB21,DMB22,DMB23,DMB31,DMB32,DMB33,MWST2,MWST3,NAVH2,NAVH3,SKNT2,SKNT3,BDIF3,RDIF3,HWMET,GLUPM,XRAGL,UZAWE,LOKKT,FISTL,GEBER,STBUK,TXBH2,TXBH3,PPRCT,XREF1,XREF2,KBLNR,KBLPOS,STTAX,FKBER,OBZEI,XNEGP,RFZEI,CCBTC,KKBER,EMPFB,XREF3,DTWS1,DTWS2,DTWS3,DTWS4,GRICD,GRIRG,GITYP,XPYPR,KIDNO,ABSBT,IDXSP,LINFV,KONTT,KONTL,UEBGDAT,TXDAT,AGZEI,PYCUR,PYAMT,BUPLA,SECCO,LSTAR,CESSION_KZ,PRZNR,PPDIFF,PPDIF2,PPDIF3,PENLC1,PENLC2,PENLC3,PENFC,PENDAYS,PENRC,GRANT_NBR,SCTAX,FKBER_LONG,GMVKZ,SRTYPE,INTRENO,MEASURE,AUGGJ,PPA_EX_IND,DOCLN,SEGMENT,PSEGMENT,PFKBER,HKTID,KSTAR,XLGCLR,TAXPS,PAYS_PROV,PAYS_TRAN,MNDID,XFRGE_BSEG,AWTYP,AWKEY,AWSYS,POSNR,BUZEI_SENDER,H_MONAT,H_BSTAT,H_BUDAT,H_BLDAT,H_WAERS,H_BLART,H_HWAER,H_HWAE2,H_HWAE3,NETDT,SK1DT,SK2DT,_DATAAGING,FQFTYPE,LQITEM,GKONT,GKART,GHKON,SQUAN,ANLN2_PN,BWASL_PN,BZDAT_PN,XVABG_PN,ANBTR_PN,PROZS_PN,ZZHRKFT,ZZHRKTX,DUMMY_INCL_EEW_COBL,RE_BUKRS,RE_ACCOUNT,PGEBER,PGRANT_NBR,BUDGET_PD,PBUDGET_PD,J_1TPBUPL,PEROP_BEG,PEROP_END,FASTPAY,IGNR_IVREF,FMFGUS_KEY,FMXDOCNR,FMXYEAR,FMXDOCLN,FMXZEKKN,PRODPER,GST_PART,PLC_SUP,HSN_SAC,RECRF,INWARD_NO,INWARD_DT,GROUND_NO,GROUND_DT,GROUND_TYP,PYMTKEY \nFROM dbo.BSEG')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Object": {
						"type": "object"
					},
					"P_DataDT": {
						"type": "string"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/controltable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_PROCESS_TYPE4_CDC_STREAM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CDC Snapshot",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CDC_SNAP_CHANGE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CDC": {
										"FOLDER_NM": {
											"value": "@concat(pipeline().parameters.P_Object.TGT_TBL, '_DELTA_CHANGES')",
											"type": "Expression"
										}
									},
									"TMPCDC": {
										"SynapseTableName": {
											"value": "@concat('TMP_CDC_',pipeline().parameters.P_Object.TGT_TBL)",
											"type": "Expression"
										},
										"SynapseSchema": {
											"value": "@pipeline().parameters.P_Object.TGT_SCHEMA_NM",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "adls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "synapse-povtug/TMP_STAGING"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "55de936d-2a87-4248-8cdf-6fd70b2812c4"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Object": {
						"type": "object"
					},
					"P_DataDT": {
						"type": "string"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CDC_SNAP_CHANGE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_PROCESS_TYPE5_CDC_INIT_TEMP_TO_SCD2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_FI]",
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_DataDT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_Object.FI_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_Object.PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SQL Script",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('INSERT INTO ',pipeline().parameters.P_Object.TGT_SCHEMA_NM,'.',pipeline().parameters.P_Object.TGT_TBL,'  (MANDT,BUKRS,BELNR,GJAHR,BUZEI,BUZID,AUGDT,AUGCP,AUGBL,BSCHL,KOART,UMSKZ,UMSKS,ZUMSK,SHKZG,GSBER,PARGB,MWSKZ,QSSKZ,DMBTR,WRBTR,KZBTR,PSWBT,PSWSL,TXBHW,TXBFW,MWSTS,WMWST,HWBAS,FWBAS,HWZUZ,FWZUZ,SHZUZ,STEKZ,MWART,TXGRP,KTOSL,QSSHB,KURSR,GBETR,BDIFF,BDIF2,VALUT,ZUONR,SGTXT,ZINKZ,VBUND,BEWAR,ALTKT,VORGN,FDLEV,FDGRP,FDWBT,FDTAG,FKONT,KOKRS,KOSTL,PROJN,AUFNR,VBELN,VBEL2,POSN2,ETEN2,ANLN1,ANLN2,ANBWA,BZDAT,PERNR,XUMSW,XHRES,XKRES,XOPVW,XCPDD,XSKST,XSAUF,XSPRO,XSERG,XFAKT,XUMAN,XANET,XSKRL,XINVE,XPANZ,XAUTO,XNCOP,XZAHL,SAKNR,HKONT,KUNNR,LIFNR,FILKD,XBILK,GVTYP,HZUON,ZFBDT,ZTERM,ZBD1T,ZBD2T,ZBD3T,ZBD1P,ZBD2P,SKFBT,SKNTO,WSKTO,ZLSCH,ZLSPR,ZBFIX,HBKID,BVTYP,NEBTR,MWSK1,DMBT1,WRBT1,MWSK2,DMBT2,WRBT2,MWSK3,DMBT3,WRBT3,REBZG,REBZJ,REBZZ,REBZT,ZOLLT,ZOLLD,LZBKZ,LANDL,DIEKZ,SAMNR,ABPER,VRSKZ,VRSDT,DISBN,DISBJ,DISBZ,WVERW,ANFBN,ANFBJ,ANFBU,ANFAE,BLNBT,BLNKZ,BLNPZ,MSCHL,MANSP,MADAT,MANST,MABER,ESRNR,ESRRE,ESRPZ,KLIBT,QSZNR,QBSHB,QSFBT,NAVHW,NAVFW,MATNR,WERKS,MENGE,MEINS,ERFMG,ERFME,BPMNG,BPRME,EBELN,EBELP,ZEKKN,ELIKZ,VPRSV,PEINH,BWKEY,BWTAR,BUSTW,REWRT,REWWR,BONFB,BUALT,PSALT,NPREI,TBTKZ,SPGRP,SPGRM,SPGRT,SPGRG,SPGRV,SPGRQ,STCEG,EGBLD,EGLLD,RSTGR,RYACQ,RPACQ,RDIFF,RDIF2,PRCTR,XHKOM,VNAME,RECID,EGRUP,VPTNR,VERTT,VERTN,VBEWA,DEPOT,TXJCD,IMKEY,DABRZ,POPTS,FIPOS,KSTRG,NPLNR,AUFPL,APLZL,PROJK,PAOBJNR,PASUBNR,SPGRS,SPGRC,BTYPE,ETYPE,XEGDR,LNRAN,HRKFT,DMBE2,DMBE3,DMB21,DMB22,DMB23,DMB31,DMB32,DMB33,MWST2,MWST3,NAVH2,NAVH3,SKNT2,SKNT3,BDIF3,RDIF3,HWMET,GLUPM,XRAGL,UZAWE,LOKKT,FISTL,GEBER,STBUK,TXBH2,TXBH3,PPRCT,XREF1,XREF2,KBLNR,KBLPOS,STTAX,FKBER,OBZEI,XNEGP,RFZEI,CCBTC,KKBER,EMPFB,XREF3,DTWS1,DTWS2,DTWS3,DTWS4,GRICD,GRIRG,GITYP,XPYPR,KIDNO,ABSBT,IDXSP,LINFV,KONTT,KONTL,UEBGDAT,TXDAT,AGZEI,PYCUR,PYAMT,BUPLA,SECCO,LSTAR,CESSION_KZ,PRZNR,PPDIFF,PPDIF2,PPDIF3,PENLC1,PENLC2,PENLC3,PENFC,PENDAYS,PENRC,GRANT_NBR,SCTAX,FKBER_LONG,GMVKZ,SRTYPE,INTRENO,MEASURE,AUGGJ,PPA_EX_IND,DOCLN,SEGMENT,PSEGMENT,PFKBER,HKTID,KSTAR,XLGCLR,TAXPS,PAYS_PROV,PAYS_TRAN,MNDID,XFRGE_BSEG,AWTYP,AWKEY,AWSYS,POSNR,BUZEI_SENDER,H_MONAT,H_BSTAT,H_BUDAT,H_BLDAT,H_WAERS,H_BLART,H_HWAER,H_HWAE2,H_HWAE3,NETDT,SK1DT,SK2DT,_DATAAGING,FQFTYPE,LQITEM,GKONT,GKART,GHKON,SQUAN,ANLN2_PN,BWASL_PN,BZDAT_PN,XVABG_PN,ANBTR_PN,PROZS_PN,ZZHRKFT,ZZHRKTX,DUMMY_INCL_EEW_COBL,RE_BUKRS,RE_ACCOUNT,PGEBER,PGRANT_NBR,BUDGET_PD,PBUDGET_PD,J_1TPBUPL,PEROP_BEG,PEROP_END,FASTPAY,IGNR_IVREF,FMFGUS_KEY,FMXDOCNR,FMXYEAR,FMXDOCLN,FMXZEKKN,PRODPER,GST_PART,PLC_SUP,HSN_SAC,RECRF,INWARD_NO,INWARD_DT,GROUND_NO,GROUND_DT,GROUND_TYP,PYMTKEY,START_DATE)\nSELECT MANDT,BUKRS,BELNR,GJAHR,BUZEI,BUZID,AUGDT,AUGCP,AUGBL,BSCHL,KOART,UMSKZ,UMSKS,ZUMSK,SHKZG,GSBER,PARGB,MWSKZ,QSSKZ,DMBTR,WRBTR,KZBTR,PSWBT,PSWSL,TXBHW,TXBFW,MWSTS,WMWST,HWBAS,FWBAS,HWZUZ,FWZUZ,SHZUZ,STEKZ,MWART,TXGRP,KTOSL,QSSHB,KURSR,GBETR,BDIFF,BDIF2,VALUT,ZUONR,SGTXT,ZINKZ,VBUND,BEWAR,ALTKT,VORGN,FDLEV,FDGRP,FDWBT,FDTAG,FKONT,KOKRS,KOSTL,PROJN,AUFNR,VBELN,VBEL2,POSN2,ETEN2,ANLN1,ANLN2,ANBWA,BZDAT,PERNR,XUMSW,XHRES,XKRES,XOPVW,XCPDD,XSKST,XSAUF,XSPRO,XSERG,XFAKT,XUMAN,XANET,XSKRL,XINVE,XPANZ,XAUTO,XNCOP,XZAHL,SAKNR,HKONT,KUNNR,LIFNR,FILKD,XBILK,GVTYP,HZUON,ZFBDT,ZTERM,ZBD1T,ZBD2T,ZBD3T,ZBD1P,ZBD2P,SKFBT,SKNTO,WSKTO,ZLSCH,ZLSPR,ZBFIX,HBKID,BVTYP,NEBTR,MWSK1,DMBT1,WRBT1,MWSK2,DMBT2,WRBT2,MWSK3,DMBT3,WRBT3,REBZG,REBZJ,REBZZ,REBZT,ZOLLT,ZOLLD,LZBKZ,LANDL,DIEKZ,SAMNR,ABPER,VRSKZ,VRSDT,DISBN,DISBJ,DISBZ,WVERW,ANFBN,ANFBJ,ANFBU,ANFAE,BLNBT,BLNKZ,BLNPZ,MSCHL,MANSP,MADAT,MANST,MABER,ESRNR,ESRRE,ESRPZ,KLIBT,QSZNR,QBSHB,QSFBT,NAVHW,NAVFW,MATNR,WERKS,MENGE,MEINS,ERFMG,ERFME,BPMNG,BPRME,EBELN,EBELP,ZEKKN,ELIKZ,VPRSV,PEINH,BWKEY,BWTAR,BUSTW,REWRT,REWWR,BONFB,BUALT,PSALT,NPREI,TBTKZ,SPGRP,SPGRM,SPGRT,SPGRG,SPGRV,SPGRQ,STCEG,EGBLD,EGLLD,RSTGR,RYACQ,RPACQ,RDIFF,RDIF2,PRCTR,XHKOM,VNAME,RECID,EGRUP,VPTNR,VERTT,VERTN,VBEWA,DEPOT,TXJCD,IMKEY,DABRZ,POPTS,FIPOS,KSTRG,NPLNR,AUFPL,APLZL,PROJK,PAOBJNR,PASUBNR,SPGRS,SPGRC,BTYPE,ETYPE,XEGDR,LNRAN,HRKFT,DMBE2,DMBE3,DMB21,DMB22,DMB23,DMB31,DMB32,DMB33,MWST2,MWST3,NAVH2,NAVH3,SKNT2,SKNT3,BDIF3,RDIF3,HWMET,GLUPM,XRAGL,UZAWE,LOKKT,FISTL,GEBER,STBUK,TXBH2,TXBH3,PPRCT,XREF1,XREF2,KBLNR,KBLPOS,STTAX,FKBER,OBZEI,XNEGP,RFZEI,CCBTC,KKBER,EMPFB,XREF3,DTWS1,DTWS2,DTWS3,DTWS4,GRICD,GRIRG,GITYP,XPYPR,KIDNO,ABSBT,IDXSP,LINFV,KONTT,KONTL,UEBGDAT,TXDAT,AGZEI,PYCUR,PYAMT,BUPLA,SECCO,LSTAR,CESSION_KZ,PRZNR,PPDIFF,PPDIF2,PPDIF3,PENLC1,PENLC2,PENLC3,PENFC,PENDAYS,PENRC,GRANT_NBR,SCTAX,FKBER_LONG,GMVKZ,SRTYPE,INTRENO,MEASURE,AUGGJ,PPA_EX_IND,DOCLN,SEGMENT,PSEGMENT,PFKBER,HKTID,KSTAR,XLGCLR,TAXPS,PAYS_PROV,PAYS_TRAN,MNDID,XFRGE_BSEG,AWTYP,AWKEY,AWSYS,POSNR,BUZEI_SENDER,H_MONAT,H_BSTAT,H_BUDAT,H_BLDAT,H_WAERS,H_BLART,H_HWAER,H_HWAE2,H_HWAE3,NETDT,SK1DT,SK2DT,_DATAAGING,FQFTYPE,LQITEM,GKONT,GKART,GHKON,SQUAN,ANLN2_PN,BWASL_PN,BZDAT_PN,XVABG_PN,ANBTR_PN,PROZS_PN,ZZHRKFT,ZZHRKTX,DUMMY_INCL_EEW_COBL,RE_BUKRS,RE_ACCOUNT,PGEBER,PGRANT_NBR,BUDGET_PD,PBUDGET_PD,J_1TPBUPL,PEROP_BEG,PEROP_END,FASTPAY,IGNR_IVREF,FMFGUS_KEY,FMXDOCNR,FMXYEAR,FMXDOCLN,FMXZEKKN,PRODPER,GST_PART,PLC_SUP,HSN_SAC,RECRF,INWARD_NO,INWARD_DT,GROUND_NO,GROUND_DT,GROUND_TYP,PYMTKEY,GETDATE() FROM dbo.BSEG')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Object": {
						"type": "object"
					},
					"P_DataDT": {
						"type": "string"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/controltable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACDOCA_CDC2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "00_INITIAL_LOAD",
						"type": "PipelineReference"
					},
					"parameters": {
						"FOLDER_NM": "[parameters('ACDOCA_CDC2_properties_pipeline_parameters_FOLDER_NM')]",
						"TGT_DB_NM": "[parameters('ACDOCA_CDC2_properties_pipeline_parameters_TGT_DB_NM')]",
						"TGT_TBL_NM": "[parameters('ACDOCA_CDC2_properties_pipeline_parameters_TGT_TBL_NM')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 10,
					"startTime": "2023-09-24T03:21:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/00_INITIAL_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDC_File_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "02_CDC_SNAPSHOT_SCD",
							"type": "PipelineReference"
						},
						"parameters": {
							"TGT_TBL_NM": "[parameters('CDC_File_Trigger_properties_02_CDC_SNAPSHOT_SCD_parameters_TGT_TBL_NM')]",
							"TGT_DB_NM": "[parameters('CDC_File_Trigger_properties_02_CDC_SNAPSHOT_SCD_parameters_TGT_DB_NM')]",
							"FOLDER_NM": "[parameters('CDC_File_Trigger_properties_02_CDC_SNAPSHOT_SCD_parameters_FOLDER_NM')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/synapse-povtug/blobs/BSEG_DELTA_CHANGES/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('CDC_File_Trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/02_CDC_SNAPSHOT_SCD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/10_COMMON_POC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET PROCESS INFORMATION",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_PCS]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK LATEST LOG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET LATEST LOG').output.FIRSTROW.LTST_LOG_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "controltable",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "controltable",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LATEST LOG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GET PROCESS INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_LTST_PCS]",
								"storedProcedureParameters": {
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK DNDP",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET DNDP').output.FIRSTROW.DPND_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "controltable",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "controltable",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET DNDP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_DPND_PCS]",
								"storedProcedureParameters": {
									"P_AS_AT_DT": {
										"type": "String",
										"value": {
											"value": "@variables('V_AS_AT_DT')",
											"type": "Expression"
										}
									},
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE FAILED ON LATEST LOG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "PREVIOUS CYCLE PROCESS DID NOT COMPLETE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON DEPENDENCIES",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "CHECKING DEPENDENCY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Lookup_PRCS_TYPE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('Lookup_PRCS_TYPE').output.firstRow.PCS_TYPE ",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "EXECUTE_PCS_TYPE1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "20_PROCESS_TYPE1_LOAD",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_Object": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstRow",
														"type": "Expression"
													},
													"P_DataDT": {
														"value": "@pipeline().parameters.P_AS_AT_DT",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "EXECUTE_PCS_TYPE2",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "20_PROCESS_TYPE2_TRANS",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_Object": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstRow",
														"type": "Expression"
													},
													"P_DataDT": {
														"value": "@pipeline().parameters.P_AS_AT_DT",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "3",
									"activities": [
										{
											"name": "EXECUTE_PCS_TYPE3",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "20_PROCESS_TYPE3_CDC_INIT_TEMP_TO_LOG",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_Object": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstRow",
														"type": "Expression"
													},
													"P_DataDT": {
														"value": "@pipeline().parameters.P_AS_AT_DT",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "4",
									"activities": [
										{
											"name": "EXECUTE_PCS_TYPE4",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "20_PROCESS_TYPE4_CDC_STREAM",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_Object": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstRow",
														"type": "Expression"
													},
													"P_DataDT": {
														"value": "@pipeline().parameters.P_AS_AT_DT",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "5",
									"activities": [
										{
											"name": "EXECUTE_PCS_TYPE5",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "20_PROCESS_TYPE5_CDC_INIT_TEMP_TO_SCD2",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_Object": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstRow",
														"type": "Expression"
													},
													"P_DataDT": {
														"value": "@pipeline().parameters.P_AS_AT_DT",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup_PRCS_TYPE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@CONCAT('SELECT * FROM CNTL.CNTL_CFG_PCS WHERE PCS_NM = ''', pipeline().parameters.P_PCS_NM, '''')\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE SUCCESS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": "0",
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": "0",
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON COPY ACTIVITY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "COPY ACTIVITY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_PCS_NM": {
						"type": "string"
					},
					"P_RUN_MODE": {
						"type": "string"
					},
					"P_LOAD_ID": {
						"type": "string"
					},
					"P_AS_AT_DT": {
						"type": "string"
					}
				},
				"variables": {
					"V_SKIP_PROCESS": {
						"type": "String"
					},
					"V_AS_AT_DT": {
						"type": "String"
					},
					"V_FILE_NAME": {
						"type": "String"
					},
					"V_STREAM_NM": {
						"type": "String"
					},
					"V_FILE_PATH": {
						"type": "String"
					},
					"V_CONNECTION_NM": {
						"type": "String"
					},
					"PRCS_NM": {
						"type": "String"
					},
					"PRCS_TYPE": {
						"type": "String"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/controltable')]",
				"[concat(variables('factoryId'), '/pipelines/20_PROCESS_TYPE1_LOAD')]",
				"[concat(variables('factoryId'), '/pipelines/20_PROCESS_TYPE2_TRANS')]",
				"[concat(variables('factoryId'), '/pipelines/20_PROCESS_TYPE3_CDC_INIT_TEMP_TO_LOG')]",
				"[concat(variables('factoryId'), '/pipelines/20_PROCESS_TYPE4_CDC_STREAM')]",
				"[concat(variables('factoryId'), '/pipelines/20_PROCESS_TYPE5_CDC_INIT_TEMP_TO_SCD2')]"
			]
		}
	]
}